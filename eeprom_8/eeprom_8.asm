;  ASM code generated by mikroVirtualMachine for PIC - V. 7.0.0.3
;  Date/Time: 26/07/2017 09:38:37
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF0B	F005			GOTO	_main
$0008	$	_Delay_1us:
;Delays.c,13 :: 			void Delay_1us()
;Delays.c,15 :: 			Delay_us(1);
$0008	$0000	    			NOP
$000A	$0000	    			NOP
;Delays.c,16 :: 			}
$000C	$0012	    			RETURN
$000E	$	_Delay_5500us:
;Delays.c,49 :: 			void Delay_5500us()
;Delays.c,51 :: 			Delay_us(5500);
$000E	$0E0F	    			MOVLW	15
$0010	$6E0B	    			MOVWF	STACK_11, 0
$0012	$0EFF	    			MOVLW	255
$0014	$6E0A	    			MOVWF	STACK_10, 0
$0016	$2E0B	    			DECFSZ	STACK_11, F, 0
$0018	$D001	    			BRA	$+2
$001A	$D003	    			BRA	$+4
$001C	$2E0A	    			DECFSZ	STACK_10, F, 0
$001E	$D7FE	    			BRA	$-1
$0020	$D7FA	    			BRA	$-5
$0022	$0E3E	    			MOVLW	62
$0024	$6E0A	    			MOVWF	STACK_10, 0
$0026	$2E0A	    			DECFSZ	STACK_10, F, 0
$0028	$D7FE	    			BRA	$-1
$002A	$0000	    			NOP
;Delays.c,52 :: 			}
$002C	$0012	    			RETURN
$002E	$	_Delay_50us:
;Delays.c,31 :: 			void Delay_50us()
;Delays.c,33 :: 			Delay_us(50);
$002E	$0E21	    			MOVLW	33
$0030	$6E0A	    			MOVWF	STACK_10, 0
$0032	$2E0A	    			DECFSZ	STACK_10, F, 0
$0034	$D7FE	    			BRA	$-1
;Delays.c,34 :: 			}
$0036	$0012	    			RETURN
$0038	$	_Lcd_Custom_Cmd:
$0038	$C015	FFE9			MOVFF	Lcd_Custom_dataport_address, FSR0L
$003C	$C016	FFEA			MOVFF	Lcd_Custom_dataport_address+1, FSR0H
$0040	$C017	FFE1			MOVFF	Lcd_Custom_ctrlport_address, FSR1L
$0044	$C018	FFE2			MOVFF	Lcd_Custom_ctrlport_address+1, FSR1H
$0048	$501A	    			MOVF	Lcd_Custom____mRW, 0, 0
$004A	$1019	    			IORWF	Lcd_Custom____mRS, 0, 0
$004C	$6E00	    			MOVWF	STACK_0, 0
$004E	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$0050	$1200	    			IORWF	STACK_0, 1, 0
$0052	$1E00	    			COMF	STACK_0, 1, 0
$0054	$5000	    			MOVF	STACK_0, 0, 0
$0056	$16E7	    			ANDWF	INDF1, 1, 0
$0058	$501D	    			MOVF	Lcd_Custom____mDB6, 0, 0
$005A	$101C	    			IORWF	Lcd_Custom____mDB7, 0, 0
$005C	$6E00	    			MOVWF	STACK_0, 0
$005E	$501E	    			MOVF	Lcd_Custom____mDB5, 0, 0
$0060	$1200	    			IORWF	STACK_0, 1, 0
$0062	$501F	    			MOVF	Lcd_Custom____mDB4, 0, 0
$0064	$1200	    			IORWF	STACK_0, 1, 0
$0066	$1E00	    			COMF	STACK_0, 1, 0
$0068	$5000	    			MOVF	STACK_0, 0, 0
$006A	$16EF	    			ANDWF	INDF0, 1, 0
$006C	$AE7A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 7, 0
$006E	$D002	    			BRA	L_Lcd_Custom_Cmd_0
$0070	$501C	    			MOVF	Lcd_Custom____mDB7, 0, 0
$0072	$12EF	    			IORWF	INDF0, 1, 0
$0074	$	L_Lcd_Custom_Cmd_0:
$0074	$AC7A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 6, 0
$0076	$D002	    			BRA	L_Lcd_Custom_Cmd_1
$0078	$501D	    			MOVF	Lcd_Custom____mDB6, 0, 0
$007A	$12EF	    			IORWF	INDF0, 1, 0
$007C	$	L_Lcd_Custom_Cmd_1:
$007C	$AA7A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 5, 0
$007E	$D002	    			BRA	L_Lcd_Custom_Cmd_2
$0080	$501E	    			MOVF	Lcd_Custom____mDB5, 0, 0
$0082	$12EF	    			IORWF	INDF0, 1, 0
$0084	$	L_Lcd_Custom_Cmd_2:
$0084	$A87A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 4, 0
$0086	$D002	    			BRA	L_Lcd_Custom_Cmd_3
$0088	$501F	    			MOVF	Lcd_Custom____mDB4, 0, 0
$008A	$12EF	    			IORWF	INDF0, 1, 0
$008C	$	L_Lcd_Custom_Cmd_3:
$008C	$5220	    			MOVF	Lcd_Custom_lcdcmd_status, 1, 0
$008E	$E005	    			BZ	L_Lcd_Custom_Cmd_4
$0090	$1C19	    			COMF	Lcd_Custom____mRS, 0, 0
$0092	$6E00	    			MOVWF	STACK_0, 0
$0094	$5000	    			MOVF	STACK_0, 0, 0
$0096	$16E7	    			ANDWF	INDF1, 1, 0
$0098	$D002	    			BRA	L_Lcd_Custom_Cmd_5
$009A	$	L_Lcd_Custom_Cmd_4:
$009A	$5019	    			MOVF	Lcd_Custom____mRS, 0, 0
$009C	$12E7	    			IORWF	INDF1, 1, 0
$009E	$	L_Lcd_Custom_Cmd_5:
$009E	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$00A0	$12E7	    			IORWF	INDF1, 1, 0
$00A2	$EC04	F000			CALL	_Delay_1us
$00A6	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$00A8	$6E00	    			MOVWF	STACK_0, 0
$00AA	$5000	    			MOVF	STACK_0, 0, 0
$00AC	$16E7	    			ANDWF	INDF1, 1, 0
$00AE	$501A	    			MOVF	Lcd_Custom____mRW, 0, 0
$00B0	$1019	    			IORWF	Lcd_Custom____mRS, 0, 0
$00B2	$6E00	    			MOVWF	STACK_0, 0
$00B4	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$00B6	$1200	    			IORWF	STACK_0, 1, 0
$00B8	$1E00	    			COMF	STACK_0, 1, 0
$00BA	$5000	    			MOVF	STACK_0, 0, 0
$00BC	$16E7	    			ANDWF	INDF1, 1, 0
$00BE	$501D	    			MOVF	Lcd_Custom____mDB6, 0, 0
$00C0	$101C	    			IORWF	Lcd_Custom____mDB7, 0, 0
$00C2	$6E00	    			MOVWF	STACK_0, 0
$00C4	$501E	    			MOVF	Lcd_Custom____mDB5, 0, 0
$00C6	$1200	    			IORWF	STACK_0, 1, 0
$00C8	$501F	    			MOVF	Lcd_Custom____mDB4, 0, 0
$00CA	$1200	    			IORWF	STACK_0, 1, 0
$00CC	$1E00	    			COMF	STACK_0, 1, 0
$00CE	$5000	    			MOVF	STACK_0, 0, 0
$00D0	$16EF	    			ANDWF	INDF0, 1, 0
$00D2	$A67A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 3, 0
$00D4	$D002	    			BRA	L_Lcd_Custom_Cmd_6
$00D6	$501C	    			MOVF	Lcd_Custom____mDB7, 0, 0
$00D8	$12EF	    			IORWF	INDF0, 1, 0
$00DA	$	L_Lcd_Custom_Cmd_6:
$00DA	$A47A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 2, 0
$00DC	$D002	    			BRA	L_Lcd_Custom_Cmd_7
$00DE	$501D	    			MOVF	Lcd_Custom____mDB6, 0, 0
$00E0	$12EF	    			IORWF	INDF0, 1, 0
$00E2	$	L_Lcd_Custom_Cmd_7:
$00E2	$A27A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 1, 0
$00E4	$D002	    			BRA	L_Lcd_Custom_Cmd_8
$00E6	$501E	    			MOVF	Lcd_Custom____mDB5, 0, 0
$00E8	$12EF	    			IORWF	INDF0, 1, 0
$00EA	$	L_Lcd_Custom_Cmd_8:
$00EA	$A07A	    			BTFSS	FARG_Lcd_Custom_Cmd+0, 0, 0
$00EC	$D002	    			BRA	L_Lcd_Custom_Cmd_9
$00EE	$501F	    			MOVF	Lcd_Custom____mDB4, 0, 0
$00F0	$12EF	    			IORWF	INDF0, 1, 0
$00F2	$	L_Lcd_Custom_Cmd_9:
$00F2	$5220	    			MOVF	Lcd_Custom_lcdcmd_status, 1, 0
$00F4	$E005	    			BZ	L_Lcd_Custom_Cmd_10
$00F6	$1C19	    			COMF	Lcd_Custom____mRS, 0, 0
$00F8	$6E00	    			MOVWF	STACK_0, 0
$00FA	$5000	    			MOVF	STACK_0, 0, 0
$00FC	$16E7	    			ANDWF	INDF1, 1, 0
$00FE	$D002	    			BRA	L_Lcd_Custom_Cmd_11
$0100	$	L_Lcd_Custom_Cmd_10:
$0100	$5019	    			MOVF	Lcd_Custom____mRS, 0, 0
$0102	$12E7	    			IORWF	INDF1, 1, 0
$0104	$	L_Lcd_Custom_Cmd_11:
$0104	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$0106	$12E7	    			IORWF	INDF1, 1, 0
$0108	$EC04	F000			CALL	_Delay_1us
$010C	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$010E	$6E00	    			MOVWF	STACK_0, 0
$0110	$5000	    			MOVF	STACK_0, 0, 0
$0112	$16E7	    			ANDWF	INDF1, 1, 0
$0114	$5220	    			MOVF	Lcd_Custom_lcdcmd_status, 1, 0
$0116	$E003	    			BZ	L_Lcd_Custom_Cmd_12
$0118	$EC07	F000			CALL	_Delay_5500us
$011C	$D002	    			BRA	L_Lcd_Custom_Cmd_13
$011E	$	L_Lcd_Custom_Cmd_12:
$011E	$EC17	F000			CALL	_Delay_50us
$0122	$	L_Lcd_Custom_Cmd_13:
$0122	$0012	    			RETURN
$0124	$	_I2C_Is_Idle:
$0124	$6A01	    			CLRF	STACK_1, 0
$0126	$B4C7	    			BTFSC	SSPSTAT, 2, 0
$0128	$2A01	    			INCF	STACK_1, 1, 0
$012A	$5001	    			MOVF	STACK_1, 0, 0
$012C	$0A00	    			XORLW	0
$012E	$E109	    			BNZ	L_I2C_Is_Idle_0
$0130	$0E1F	    			MOVLW	31
$0132	$14C5	    			ANDWF	SSPCON2, 0, 0
$0134	$6E01	    			MOVWF	STACK_1, 0
$0136	$5001	    			MOVF	STACK_1, 0, 0
$0138	$0A00	    			XORLW	0
$013A	$E103	    			BNZ	L_I2C_Is_Idle_1
$013C	$0E01	    			MOVLW	1
$013E	$6E00	    			MOVWF	STACK_0, 0
$0140	$0012	    			RETURN
$0142	$	L_I2C_Is_Idle_1:
$0142	$	L_I2C_Is_Idle_0:
$0142	$6A00	    			CLRF	STACK_0, 0
$0144	$0012	    			RETURN
$0146	$	_Lcd_Custom_Chr_CP:
$0146	$6A20	    			CLRF	Lcd_Custom_lcdcmd_status, 0
$0148	$C079	F07A			MOVFF	FARG_Lcd_Custom_Chr_CP+0, FARG_Lcd_Custom_Cmd+0
$014C	$EC1C	F000			CALL	_Lcd_Custom_Cmd
$0150	$0E01	    			MOVLW	1
$0152	$6E20	    			MOVWF	Lcd_Custom_lcdcmd_status, 0
$0154	$0012	    			RETURN
$0156	$	_Div_16x16_U:
$0156	$0100	    			MOVLB	0
$0158	$6A08	    			CLRF	STACK_8, 0
$015A	$6A09	    			CLRF	STACK_9, 0
$015C	$0E10	    			MOVLW	16
$015E	$6E0C	    			MOVWF	STACK_12, 0
$0160	$3401	    			RLCF	STACK_1, W, 0
$0162	$3608	    			RLCF	STACK_8, F, 0
$0164	$3609	    			RLCF	STACK_9, F, 0
$0166	$5004	    			MOVF	STACK_4, W, 0
$0168	$5E08	    			SUBWF	STACK_8, F, 0
$016A	$5005	    			MOVF	STACK_5, W, 0
$016C	$A0D8	    			BTFSS	STATUS, C, 0
$016E	$3C05	    			INCFSZ	STACK_5, W, 0
$0170	$5E09	    			SUBWF	STACK_9, F, 0
$0172	$B0D8	    			BTFSC	STATUS, C, 0
$0174	$EFC3	F000			GOTO	$+8
$0178	$5004	    			MOVF	STACK_4, W, 0
$017A	$2608	    			ADDWF	STACK_8, F, 0
$017C	$5005	    			MOVF	STACK_5, W, 0
$017E	$B0D8	    			BTFSC	STATUS, C, 0
$0180	$3C05	    			INCFSZ	STACK_5, W, 0
$0182	$2609	    			ADDWF	STACK_9, F, 0
$0184	$90D8	    			BCF	STATUS, C, 0
$0186	$3600	    			RLCF	STACK_0, F, 0
$0188	$3601	    			RLCF	STACK_1, F, 0
$018A	$2E0C	    			DECFSZ	STACK_12, F, 0
$018C	$EFB0	F000			GOTO	$-21
$0190	$0012	    			RETURN
$0192	$	_I2C_Start:
$0192	$6A74	    			CLRF	I2C_Start_j_L0, 0
$0194	$6A75	    			CLRF	I2C_Start_j_L0+1, 0
$0196	$	L_I2C_Start_2:
$0196	$5075	    			MOVF	I2C_Start_j_L0+1, 0, 0
$0198	$0812	    			SUBLW	18
$019A	$E102	    			BNZ	L_I2C_Start_23
$019C	$5074	    			MOVF	I2C_Start_j_L0, 0, 0
$019E	$088E	    			SUBLW	142
$01A0	$	L_I2C_Start_23:
$01A0	$E307	    			BNC	L_I2C_Start_3
$01A2	$EC92	F000			CALL	_I2C_Is_Idle
$01A6	$5200	    			MOVF	STACK_0, 1, 0
$01A8	$E103	    			BNZ	L_I2C_Start_3
$01AA	$	L_I2C_Start_5:
$01AA	$	L_I2C_Start_4:
$01AA	$4A74	    			INFSNZ	I2C_Start_j_L0, 1, 0
$01AC	$2A75	    			INCF	I2C_Start_j_L0+1, 1, 0
$01AE	$D7F3	    			BRA	L_I2C_Start_2
$01B0	$	L_I2C_Start_3:
$01B0	$0E12	    			MOVLW	18
$01B2	$5C75	    			SUBWF	I2C_Start_j_L0+1, 0, 0
$01B4	$E102	    			BNZ	L_I2C_Start_24
$01B6	$0E8F	    			MOVLW	143
$01B8	$5C74	    			SUBWF	I2C_Start_j_L0, 0, 0
$01BA	$	L_I2C_Start_24:
$01BA	$E303	    			BNC	L_I2C_Start_6
$01BC	$0E7B	    			MOVLW	123
$01BE	$6E00	    			MOVWF	STACK_0, 0
$01C0	$0012	    			RETURN
$01C2	$	L_I2C_Start_6:
$01C2	$80C5	    			BSF	SSPCON2, 0, 0
$01C4	$	L_I2C_Start_8:
$01C4	$A0C5	    			BTFSS	SSPCON2, 0, 0
$01C6	$D002	    			BRA	L_I2C_Start_9
$01C8	$0000	    			NOP
$01CA	$D7FC	    			BRA	L_I2C_Start_8
$01CC	$	L_I2C_Start_9:
$01CC	$6A00	    			CLRF	STACK_0, 0
$01CE	$0012	    			RETURN
$01D0	$	_I2C_Wr:
$01D0	$C074	FFC9			MOVFF	FARG_I2C_Wr+0, SSPBUF
$01D4	$969E	    			BCF	PIR1, 3, 0
$01D6	$	L_I2C_Wr_17:
$01D6	$B4C7	    			BTFSC	SSPSTAT, 2, 0
$01D8	$D7FE	    			BRA	L_I2C_Wr_17
$01DA	$	L_I2C_Wr_18:
$01DA	$	L_I2C_Wr_19:
$01DA	$A69E	    			BTFSS	PIR1, 3, 0
$01DC	$D7FE	    			BRA	L_I2C_Wr_19
$01DE	$	L_I2C_Wr_20:
$01DE	$6A01	    			CLRF	STACK_1, 0
$01E0	$BCC5	    			BTFSC	SSPCON2, 6, 0
$01E2	$2A01	    			INCF	STACK_1, 1, 0
$01E4	$5001	    			MOVF	STACK_1, 0, 0
$01E6	$0A00	    			XORLW	0
$01E8	$E102	    			BNZ	L_I2C_Wr_21
$01EA	$6A00	    			CLRF	STACK_0, 0
$01EC	$0012	    			RETURN
$01EE	$	L_I2C_Wr_21:
$01EE	$84C5	    			BSF	SSPCON2, 2, 0
$01F0	$0E02	    			MOVLW	2
$01F2	$6E00	    			MOVWF	STACK_0, 0
$01F4	$0012	    			RETURN
$01F6	$	_I2C_Stop:
$01F6	$84C5	    			BSF	SSPCON2, 2, 0
$01F8	$0012	    			RETURN
$01FA	$	_I2C_Repeated_Start:
$01FA	$82C5	    			BSF	SSPCON2, 1, 0
$01FC	$	L_I2C_Repeated_Start_10:
$01FC	$A2C5	    			BTFSS	SSPCON2, 1, 0
$01FE	$D002	    			BRA	L_I2C_Repeated_Start_11
$0200	$0000	    			NOP
$0202	$D7FC	    			BRA	L_I2C_Repeated_Start_10
$0204	$	L_I2C_Repeated_Start_11:
$0204	$0012	    			RETURN
$0206	$	_I2C_Rd:
$0206	$86C5	    			BSF	SSPCON2, 3, 0
$0208	$969E	    			BCF	PIR1, 3, 0
$020A	$	L_I2C_Rd_12:
$020A	$A69E	    			BTFSS	PIR1, 3, 0
$020C	$D7FE	    			BRA	L_I2C_Rd_12
$020E	$	L_I2C_Rd_13:
$020E	$CFC9	F075			MOVFF	SSPBUF, I2C_Rd_tmp_L0
$0212	$9AC5	    			BCF	SSPCON2, 5, 0
$0214	$5074	    			MOVF	FARG_I2C_Rd+0, 0, 0
$0216	$0A00	    			XORLW	0
$0218	$B4D8	    			BTFSC	STATUS, Z, 0
$021A	$8AC5	    			BSF	SSPCON2, 5, 0
$021C	$	L_I2C_Rd_14:
$021C	$88C5	    			BSF	SSPCON2, 4, 0
$021E	$969E	    			BCF	PIR1, 3, 0
$0220	$	L_I2C_Rd_15:
$0220	$A69E	    			BTFSS	PIR1, 3, 0
$0222	$D7FE	    			BRA	L_I2C_Rd_15
$0224	$	L_I2C_Rd_16:
$0224	$C075	F000			MOVFF	I2C_Rd_tmp_L0, STACK_0
$0228	$0012	    			RETURN
$022A	$	_Lcd_Custom_Out:
$022A	$D00F	    			BRA	L_Lcd_Custom_Out_23
$022C	$	L_Lcd_Custom_Out_25:
$022C	$0E80	    			MOVLW	128
$022E	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$0230	$D019	    			BRA	L_Lcd_Custom_Out_24
$0232	$	L_Lcd_Custom_Out_26:
$0232	$0EC0	    			MOVLW	192
$0234	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$0236	$D016	    			BRA	L_Lcd_Custom_Out_24
$0238	$	L_Lcd_Custom_Out_27:
$0238	$0E94	    			MOVLW	148
$023A	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$023C	$D013	    			BRA	L_Lcd_Custom_Out_24
$023E	$	L_Lcd_Custom_Out_28:
$023E	$0ED4	    			MOVLW	212
$0240	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$0242	$D010	    			BRA	L_Lcd_Custom_Out_24
$0244	$	L_Lcd_Custom_Out_29:
$0244	$0E80	    			MOVLW	128
$0246	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$0248	$D00D	    			BRA	L_Lcd_Custom_Out_24
$024A	$	L_Lcd_Custom_Out_23:
$024A	$5074	    			MOVF	FARG_Lcd_Custom_Out+0, 0, 0
$024C	$0A01	    			XORLW	1
$024E	$E0EE	    			BZ	L_Lcd_Custom_Out_25
$0250	$5074	    			MOVF	FARG_Lcd_Custom_Out+0, 0, 0
$0252	$0A02	    			XORLW	2
$0254	$E0EE	    			BZ	L_Lcd_Custom_Out_26
$0256	$5074	    			MOVF	FARG_Lcd_Custom_Out+0, 0, 0
$0258	$0A03	    			XORLW	3
$025A	$E0EE	    			BZ	L_Lcd_Custom_Out_27
$025C	$5074	    			MOVF	FARG_Lcd_Custom_Out+0, 0, 0
$025E	$0A04	    			XORLW	4
$0260	$E0EE	    			BZ	L_Lcd_Custom_Out_28
$0262	$D7F0	    			BRA	L_Lcd_Custom_Out_29
$0264	$	L_Lcd_Custom_Out_24:
$0264	$0475	    			DECF	FARG_Lcd_Custom_Out+1, 0, 0
$0266	$6E00	    			MOVWF	STACK_0, 0
$0268	$5074	    			MOVF	FARG_Lcd_Custom_Out+0, 0, 0
$026A	$2600	    			ADDWF	STACK_0, 1, 0
$026C	$C000	F074			MOVFF	STACK_0, FARG_Lcd_Custom_Out+0
$0270	$C000	F07A			MOVFF	STACK_0, FARG_Lcd_Custom_Cmd+0
$0274	$EC1C	F000			CALL	_Lcd_Custom_Cmd
$0278	$6A20	    			CLRF	Lcd_Custom_lcdcmd_status, 0
$027A	$6A78	    			CLRF	Lcd_Custom_Out_i_L0, 0
$027C	$	L_Lcd_Custom_Out_30:
$027C	$5078	    			MOVF	Lcd_Custom_Out_i_L0, 0, 0
$027E	$2476	    			ADDWF	FARG_Lcd_Custom_Out+2, 0, 0
$0280	$6EE9	    			MOVWF	FSR0L, 0
$0282	$0E00	    			MOVLW	0
$0284	$2077	    			ADDWFC	FARG_Lcd_Custom_Out+3, 0, 0
$0286	$6EEA	    			MOVWF	FSR0L+1, 0
$0288	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$028C	$5200	    			MOVF	STACK_0, 1, 0
$028E	$E00C	    			BZ	L_Lcd_Custom_Out_31
$0290	$5078	    			MOVF	Lcd_Custom_Out_i_L0, 0, 0
$0292	$2476	    			ADDWF	FARG_Lcd_Custom_Out+2, 0, 0
$0294	$6EE9	    			MOVWF	FSR0L, 0
$0296	$0E00	    			MOVLW	0
$0298	$2077	    			ADDWFC	FARG_Lcd_Custom_Out+3, 0, 0
$029A	$6EEA	    			MOVWF	FSR0L+1, 0
$029C	$CFEE	F079			MOVFF	POSTINC0, FARG_Lcd_Custom_Chr_CP+0
$02A0	$ECA3	F000			CALL	_Lcd_Custom_Chr_CP
$02A4	$2A78	    			INCF	Lcd_Custom_Out_i_L0, 1, 0
$02A6	$D7EA	    			BRA	L_Lcd_Custom_Out_30
$02A8	$	L_Lcd_Custom_Out_31:
$02A8	$0E01	    			MOVLW	1
$02AA	$6E20	    			MOVWF	Lcd_Custom_lcdcmd_status, 0
$02AC	$0012	    			RETURN
$02AE	$	_WordToStr:
$02AE	$C076	FFE9			MOVFF	FARG_WordToStr+2, FSR0L
$02B2	$C077	FFEA			MOVFF	FARG_WordToStr+3, FSR0H
$02B6	$0E20	    			MOVLW	32
$02B8	$6EEE	    			MOVWF	POSTINC0, 0
$02BA	$0E20	    			MOVLW	32
$02BC	$6EEE	    			MOVWF	POSTINC0, 0
$02BE	$0E20	    			MOVLW	32
$02C0	$6EEE	    			MOVWF	POSTINC0, 0
$02C2	$0E20	    			MOVLW	32
$02C4	$6EEE	    			MOVWF	POSTINC0, 0
$02C6	$0E20	    			MOVLW	32
$02C8	$6EEE	    			MOVWF	POSTINC0, 0
$02CA	$6AEF	    			CLRF	INDF0, 0
$02CC	$0E01	    			MOVLW	1
$02CE	$6E78	    			MOVWF	WordToStr_len_L0, 0
$02D0	$0E00	    			MOVLW	0
$02D2	$6E00	    			MOVWF	STACK_0, 0
$02D4	$5075	    			MOVF	FARG_WordToStr+1, 0, 0
$02D6	$5C00	    			SUBWF	STACK_0, 0, 0
$02D8	$E102	    			BNZ	L_WordToStr_55
$02DA	$5074	    			MOVF	FARG_WordToStr+0, 0, 0
$02DC	$0809	    			SUBLW	9
$02DE	$	L_WordToStr_55:
$02DE	$A0D8	    			BTFSS	STATUS, C, 0
$02E0	$2A78	    			INCF	WordToStr_len_L0, 1, 0
$02E2	$	L_WordToStr_4:
$02E2	$0E00	    			MOVLW	0
$02E4	$6E00	    			MOVWF	STACK_0, 0
$02E6	$5075	    			MOVF	FARG_WordToStr+1, 0, 0
$02E8	$5C00	    			SUBWF	STACK_0, 0, 0
$02EA	$E102	    			BNZ	L_WordToStr_56
$02EC	$5074	    			MOVF	FARG_WordToStr+0, 0, 0
$02EE	$0863	    			SUBLW	99
$02F0	$	L_WordToStr_56:
$02F0	$A0D8	    			BTFSS	STATUS, C, 0
$02F2	$2A78	    			INCF	WordToStr_len_L0, 1, 0
$02F4	$	L_WordToStr_5:
$02F4	$5075	    			MOVF	FARG_WordToStr+1, 0, 0
$02F6	$0803	    			SUBLW	3
$02F8	$E102	    			BNZ	L_WordToStr_57
$02FA	$5074	    			MOVF	FARG_WordToStr+0, 0, 0
$02FC	$08E7	    			SUBLW	231
$02FE	$	L_WordToStr_57:
$02FE	$A0D8	    			BTFSS	STATUS, C, 0
$0300	$2A78	    			INCF	WordToStr_len_L0, 1, 0
$0302	$	L_WordToStr_6:
$0302	$5075	    			MOVF	FARG_WordToStr+1, 0, 0
$0304	$0827	    			SUBLW	39
$0306	$E102	    			BNZ	L_WordToStr_58
$0308	$5074	    			MOVF	FARG_WordToStr+0, 0, 0
$030A	$080F	    			SUBLW	15
$030C	$	L_WordToStr_58:
$030C	$A0D8	    			BTFSS	STATUS, C, 0
$030E	$2A78	    			INCF	WordToStr_len_L0, 1, 0
$0310	$	L_WordToStr_7:
$0310	$6AED	    			CLRF	POSTDEC0, 0
$0312	$	L_WordToStr_8:
$0312	$5078	    			MOVF	WordToStr_len_L0, 0, 0
$0314	$0800	    			SUBLW	0
$0316	$E224	    			BC	L_WordToStr_9
$0318	$0E0A	    			MOVLW	10
$031A	$6E04	    			MOVWF	STACK_4, 0
$031C	$0E00	    			MOVLW	0
$031E	$6E05	    			MOVWF	STACK_4+1, 0
$0320	$C074	F000			MOVFF	FARG_WordToStr+0, STACK_0
$0324	$C075	F001			MOVFF	FARG_WordToStr+1, STACK_0+1
$0328	$ECAB	F000			CALL	_div_16x16_u
$032C	$C008	F000			MOVFF	STACK_8, STACK_0
$0330	$C009	F001			MOVFF	STACK_9, STACK_1
$0334	$C000	FFEF			MOVFF	STACK_0, INDF0
$0338	$50EF	    			MOVF	INDF0, 0, 0
$033A	$5C74	    			SUBWF	FARG_WordToStr+0, 0, 0
$033C	$6E00	    			MOVWF	STACK_0, 0
$033E	$0E00	    			MOVLW	0
$0340	$5875	    			SUBWFB	FARG_WordToStr+1, 0, 0
$0342	$6E01	    			MOVWF	STACK_0+1, 0
$0344	$0E0A	    			MOVLW	10
$0346	$6E04	    			MOVWF	STACK_4, 0
$0348	$0E00	    			MOVLW	0
$034A	$6E05	    			MOVWF	STACK_4+1, 0
$034C	$ECAB	F000			CALL	_div_16x16_u
$0350	$C000	F074			MOVFF	STACK_0, FARG_WordToStr+0
$0354	$C001	F075			MOVFF	STACK_0+1, FARG_WordToStr+1
$0358	$0E30	    			MOVLW	48
$035A	$26ED	    			ADDWF	POSTDEC0, 1, 0
$035C	$0678	    			DECF	WordToStr_len_L0, 1, 0
$035E	$D7D9	    			BRA	L_WordToStr_8
$0360	$	L_WordToStr_9:
$0360	$0012	    			RETURN
$0362	$	_w_24c04:
;eeprom_8.c,8 :: 			void w_24c04 (int addr, char data) {
;eeprom_8.c,9 :: 			i2c_start();
$0362	$ECC9	F000			CALL	_I2C_Start
;eeprom_8.c,10 :: 			i2c_wr(0xa0);
$0366	$0EA0	    			MOVLW	160
$0368	$6E74	    			MOVWF	FARG_I2C_Wr+0, 0
$036A	$ECE8	F000			CALL	_I2C_Wr
;eeprom_8.c,11 :: 			i2c_wr(addr);
$036E	$C06C	F074			MOVFF	FARG_w_24c04+0, FARG_I2C_Wr+0
$0372	$ECE8	F000			CALL	_I2C_Wr
;eeprom_8.c,12 :: 			i2c_wr(data);
$0376	$C06E	F074			MOVFF	FARG_w_24c04+2, FARG_I2C_Wr+0
$037A	$ECE8	F000			CALL	_I2C_Wr
;eeprom_8.c,13 :: 			i2c_stop();
$037E	$ECFB	F000			CALL	_I2C_Stop
;eeprom_8.c,14 :: 			}
$0382	$0012	    			RETURN
$0384	$	_r_24c04:
;eeprom_8.c,16 :: 			int r_24c04 (int addr) {
;eeprom_8.c,18 :: 			i2c_start();
$0384	$ECC9	F000			CALL	_I2C_Start
;eeprom_8.c,19 :: 			i2c_wr(0xa0);
$0388	$0EA0	    			MOVLW	160
$038A	$6E74	    			MOVWF	FARG_I2C_Wr+0, 0
$038C	$ECE8	F000			CALL	_I2C_Wr
;eeprom_8.c,20 :: 			i2c_wr(addr);
$0390	$C06C	F074			MOVFF	FARG_r_24c04+0, FARG_I2C_Wr+0
$0394	$ECE8	F000			CALL	_I2C_Wr
;eeprom_8.c,21 :: 			i2c_repeated_start();
$0398	$ECFD	F000			CALL	_I2C_Repeated_Start
;eeprom_8.c,22 :: 			i2c_wr(0xa1);
$039C	$0EA1	    			MOVLW	161
$039E	$6E74	    			MOVWF	FARG_I2C_Wr+0, 0
$03A0	$ECE8	F000			CALL	_I2C_Wr
;eeprom_8.c,23 :: 			k = i2c_rd(0u);
$03A4	$6A74	    			CLRF	FARG_I2C_Rd+0, 0
$03A6	$EC03	F001			CALL	_I2C_Rd
$03AA	$C000	F06E			MOVFF	STACK_0, r_24c04_k_L0
$03AE	$0E00	    			MOVLW	0
$03B0	$6E6F	    			MOVWF	r_24c04_k_L0+1, 0
;eeprom_8.c,24 :: 			i2c_stop();
$03B2	$ECFB	F000			CALL	_I2C_Stop
;eeprom_8.c,25 :: 			return k;
$03B6	$C06E	F000			MOVFF	r_24c04_k_L0, STACK_0
$03BA	$C06F	F001			MOVFF	r_24c04_k_L0+1, STACK_0+1
;eeprom_8.c,26 :: 			}
$03BE	$0012	    			RETURN
$03C0	$	_lcd:
;eeprom_8.c,1 :: 			void lcd(char str[15]) {
;eeprom_8.c,2 :: 			trisd = 0;
$03C0	$6A95	    			CLRF	TRISD, 0
;eeprom_8.c,3 :: 			lcd_custom_cmd(lcd_clear);
$03C2	$0E01	    			MOVLW	1
$03C4	$6E7A	    			MOVWF	FARG_Lcd_Custom_Cmd+0, 0
$03C6	$EC1C	F000			CALL	_Lcd_Custom_Cmd
;eeprom_8.c,4 :: 			lcd_custom_out(1, 1, str);
$03CA	$0E01	    			MOVLW	1
$03CC	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$03CE	$0E01	    			MOVLW	1
$03D0	$6E75	    			MOVWF	FARG_Lcd_Custom_Out+1, 0
$03D2	$C06C	F076			MOVFF	FARG_lcd+0, FARG_Lcd_Custom_Out+2
$03D6	$C06D	F077			MOVFF	FARG_lcd+1, FARG_Lcd_Custom_Out+3
$03DA	$EC15	F001			CALL	_Lcd_Custom_Out
;eeprom_8.c,5 :: 			trisd = 255;
$03DE	$0EFF	    			MOVLW	255
$03E0	$6E95	    			MOVWF	TRISD, 0
;eeprom_8.c,6 :: 			}
$03E2	$0012	    			RETURN
$03E4	$	_IntToStr:
$03E4	$6A71	    			CLRF	IntToStr_negative_L0, 0
$03E6	$C06C	F072			MOVFF	FARG_IntToStr+0, IntToStr_inword_L0
$03EA	$C06D	F073			MOVFF	FARG_IntToStr+1, IntToStr_inword_L0+1
$03EE	$0E80	    			MOVLW	128
$03F0	$186D	    			XORWF	FARG_IntToStr+1, 0, 0
$03F2	$6E00	    			MOVWF	STACK_0, 0
$03F4	$0E80	    			MOVLW	128
$03F6	$5C00	    			SUBWF	STACK_0, 0, 0
$03F8	$E102	    			BNZ	L_IntToStr_59
$03FA	$0E00	    			MOVLW	0
$03FC	$5C6C	    			SUBWF	FARG_IntToStr+0, 0, 0
$03FE	$	L_IntToStr_59:
$03FE	$E209	    			BC	L_IntToStr_16
$0400	$0E01	    			MOVLW	1
$0402	$6E71	    			MOVWF	IntToStr_negative_L0, 0
$0404	$506C	    			MOVF	FARG_IntToStr+0, 0, 0
$0406	$0800	    			SUBLW	0
$0408	$6E72	    			MOVWF	IntToStr_inword_L0, 0
$040A	$C06D	F073			MOVFF	FARG_IntToStr+1, IntToStr_inword_L0+1
$040E	$6AE8	    			CLRF	WREG, 0
$0410	$5673	    			SUBFWB	IntToStr_inword_L0+1, 1, 0
$0412	$	L_IntToStr_16:
$0412	$C072	F074			MOVFF	IntToStr_inword_L0, FARG_WordToStr+0
$0416	$C073	F075			MOVFF	IntToStr_inword_L0+1, FARG_WordToStr+1
$041A	$C06E	F076			MOVFF	FARG_IntToStr+2, FARG_WordToStr+2
$041E	$C06F	F077			MOVFF	FARG_IntToStr+3, FARG_WordToStr+3
$0422	$EC57	F001			CALL	_WordToStr
$0426	$0E06	    			MOVLW	6
$0428	$6E70	    			MOVWF	IntToStr_i_L0, 0
$042A	$	L_IntToStr_17:
$042A	$5070	    			MOVF	IntToStr_i_L0, 0, 0
$042C	$0800	    			SUBLW	0
$042E	$E217	    			BC	L_IntToStr_18
$0430	$5070	    			MOVF	IntToStr_i_L0, 0, 0
$0432	$246E	    			ADDWF	FARG_IntToStr+2, 0, 0
$0434	$6EE1	    			MOVWF	FSR1L, 0
$0436	$0E00	    			MOVLW	0
$0438	$206F	    			ADDWFC	FARG_IntToStr+3, 0, 0
$043A	$6EE2	    			MOVWF	FSR1L+1, 0
$043C	$0470	    			DECF	IntToStr_i_L0, 0, 0
$043E	$6E00	    			MOVWF	STACK_0, 0
$0440	$6A01	    			CLRF	STACK_0+1, 0
$0442	$0E00	    			MOVLW	0
$0444	$5A01	    			SUBWFB	STACK_0+1, 1, 0
$0446	$5000	    			MOVF	STACK_0, 0, 0
$0448	$246E	    			ADDWF	FARG_IntToStr+2, 0, 0
$044A	$6EE9	    			MOVWF	FSR0L, 0
$044C	$5001	    			MOVF	STACK_0+1, 0, 0
$044E	$206F	    			ADDWFC	FARG_IntToStr+3, 0, 0
$0450	$6EEA	    			MOVWF	FSR0L+1, 0
$0452	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$0456	$C000	FFE6			MOVFF	STACK_0, POSTINC1
$045A	$0670	    			DECF	IntToStr_i_L0, 1, 0
$045C	$D7E6	    			BRA	L_IntToStr_17
$045E	$	L_IntToStr_18:
$045E	$C06E	FFE1			MOVFF	FARG_IntToStr+2, FSR1L
$0462	$C06F	FFE2			MOVFF	FARG_IntToStr+3, FSR1H
$0466	$0E20	    			MOVLW	32
$0468	$6EE6	    			MOVWF	POSTINC1, 0
$046A	$5271	    			MOVF	IntToStr_negative_L0, 1, 0
$046C	$E017	    			BZ	L_IntToStr_19
$046E	$6A70	    			CLRF	IntToStr_i_L0, 0
$0470	$	L_IntToStr_20:
$0470	$5070	    			MOVF	IntToStr_i_L0, 0, 0
$0472	$246E	    			ADDWF	FARG_IntToStr+2, 0, 0
$0474	$6EE9	    			MOVWF	FSR0L, 0
$0476	$0E00	    			MOVLW	0
$0478	$206F	    			ADDWFC	FARG_IntToStr+3, 0, 0
$047A	$6EEA	    			MOVWF	FSR0L+1, 0
$047C	$CFEE	F002			MOVFF	POSTINC0, STACK_2
$0480	$5002	    			MOVF	STACK_2, 0, 0
$0482	$0A20	    			XORLW	32
$0484	$E102	    			BNZ	L_IntToStr_21
$0486	$2A70	    			INCF	IntToStr_i_L0, 1, 0
$0488	$D7F3	    			BRA	L_IntToStr_20
$048A	$	L_IntToStr_21:
$048A	$0670	    			DECF	IntToStr_i_L0, 1, 0
$048C	$5070	    			MOVF	IntToStr_i_L0, 0, 0
$048E	$246E	    			ADDWF	FARG_IntToStr+2, 0, 0
$0490	$6EE1	    			MOVWF	FSR1L, 0
$0492	$0E00	    			MOVLW	0
$0494	$206F	    			ADDWFC	FARG_IntToStr+3, 0, 0
$0496	$6EE2	    			MOVWF	FSR1L+1, 0
$0498	$0E2D	    			MOVLW	45
$049A	$6EE6	    			MOVWF	POSTINC1, 0
$049C	$	L_IntToStr_19:
$049C	$0012	    			RETURN
$049E	$	_Mul_16x16_S:
$049E	$0100	    			MOVLB	0
$04A0	$5000	    			MOVF	STACK_0, W, 0
$04A2	$0204	    			MULWF	STACK_4, 0
$04A4	$CFF4	F009			MOVFF	PRODH, STACK_9
$04A8	$CFF3	F008			MOVFF	PRODL, STACK_8
$04AC	$5001	    			MOVF	STACK_1, W, 0
$04AE	$0205	    			MULWF	STACK_5, 0
$04B0	$CFF4	F00B			MOVFF	PRODH, STACK_11
$04B4	$CFF3	F00A			MOVFF	PRODL, STACK_10
$04B8	$5000	    			MOVF	STACK_0, W, 0
$04BA	$0205	    			MULWF	STACK_5, 0
$04BC	$50F3	    			MOVF	PRODL, W, 0
$04BE	$2609	    			ADDWF	STACK_9, F, 0
$04C0	$50F4	    			MOVF	PRODH, W, 0
$04C2	$220A	    			ADDWFC	STACK_10, F, 0
$04C4	$6AE8	    			CLRF	WREG, 0
$04C6	$220B	    			ADDWFC	STACK_11, F, 0
$04C8	$5001	    			MOVF	STACK_1, W, 0
$04CA	$0204	    			MULWF	STACK_4, 0
$04CC	$50F3	    			MOVF	PRODL, W, 0
$04CE	$2609	    			ADDWF	STACK_9, F, 0
$04D0	$50F4	    			MOVF	PRODH, W, 0
$04D2	$220A	    			ADDWFC	STACK_10, F, 0
$04D4	$6AE8	    			CLRF	WREG, 0
$04D6	$220B	    			ADDWFC	STACK_11, F, 0
$04D8	$AE05	    			BTFSS	STACK_5, 7, 0
$04DA	$EF73	F002			GOTO	$+5
$04DE	$5000	    			MOVF	STACK_0, W, 0
$04E0	$5C0A	    			SUBWF	STACK_10, W, 0
$04E2	$5001	    			MOVF	STACK_1, W, 0
$04E4	$580B	    			SUBWFB	STACK_11, W, 0
$04E6	$AE01	    			BTFSS	STACK_1, 7, 0
$04E8	$EF7A	F002			GOTO	$+5
$04EC	$5004	    			MOVF	STACK_4, W, 0
$04EE	$5C0A	    			SUBWF	STACK_10, W, 0
$04F0	$5005	    			MOVF	STACK_5, W, 0
$04F2	$580B	    			SUBWFB	STACK_11, W, 0
$04F4	$C008	F000			MOVFF	STACK_8, STACK_0
$04F8	$C009	F001			MOVFF	STACK_9, STACK_1
$04FC	$C00A	F002			MOVFF	STACK_10, STACK_2
$0500	$C00B	F003			MOVFF	STACK_11, STACK_3
$0504	$0012	    			RETURN
$0506	$	_Lcd_Custom_Config:
$0506	$EC07	F000			CALL	_Delay_5500us
$050A	$EC07	F000			CALL	_Delay_5500us
$050E	$EC07	F000			CALL	_Delay_5500us
$0512	$C03B	F000			MOVFF	FARG_Lcd_Custom_Config+2, STACK_0
$0516	$0E01	    			MOVLW	1
$0518	$6E02	    			MOVWF	STACK_2, 0
$051A	$5000	    			MOVF	STACK_0, 0, 0
$051C	$	L_Lcd_Custom_Config_32:
$051C	$E004	    			BZ	L_Lcd_Custom_Config_33
$051E	$3602	    			RLCF	STACK_2, 1, 0
$0520	$9002	    			BCF	STACK_2, 0, 0
$0522	$0FFF	    			ADDLW	255
$0524	$D7FB	    			BRA	L_Lcd_Custom_Config_32
$0526	$	L_Lcd_Custom_Config_33:
$0526	$C002	F01C			MOVFF	STACK_2, Lcd_Custom____mDB7
$052A	$C03C	F000			MOVFF	FARG_Lcd_Custom_Config+3, STACK_0
$052E	$0E01	    			MOVLW	1
$0530	$6E01	    			MOVWF	STACK_1, 0
$0532	$5000	    			MOVF	STACK_0, 0, 0
$0534	$	L_Lcd_Custom_Config_34:
$0534	$E004	    			BZ	L_Lcd_Custom_Config_35
$0536	$3601	    			RLCF	STACK_1, 1, 0
$0538	$9001	    			BCF	STACK_1, 0, 0
$053A	$0FFF	    			ADDLW	255
$053C	$D7FB	    			BRA	L_Lcd_Custom_Config_34
$053E	$	L_Lcd_Custom_Config_35:
$053E	$C001	F01D			MOVFF	STACK_1, Lcd_Custom____mDB6
$0542	$C03D	F000			MOVFF	FARG_Lcd_Custom_Config+4, STACK_0
$0546	$0E01	    			MOVLW	1
$0548	$6E07	    			MOVWF	STACK_7, 0
$054A	$5000	    			MOVF	STACK_0, 0, 0
$054C	$	L_Lcd_Custom_Config_36:
$054C	$E004	    			BZ	L_Lcd_Custom_Config_37
$054E	$3607	    			RLCF	STACK_7, 1, 0
$0550	$9007	    			BCF	STACK_7, 0, 0
$0552	$0FFF	    			ADDLW	255
$0554	$D7FB	    			BRA	L_Lcd_Custom_Config_36
$0556	$	L_Lcd_Custom_Config_37:
$0556	$C007	F01E			MOVFF	STACK_7, Lcd_Custom____mDB5
$055A	$C03E	F000			MOVFF	FARG_Lcd_Custom_Config+5, STACK_0
$055E	$0E01	    			MOVLW	1
$0560	$6E06	    			MOVWF	STACK_6, 0
$0562	$5000	    			MOVF	STACK_0, 0, 0
$0564	$	L_Lcd_Custom_Config_38:
$0564	$E004	    			BZ	L_Lcd_Custom_Config_39
$0566	$3606	    			RLCF	STACK_6, 1, 0
$0568	$9006	    			BCF	STACK_6, 0, 0
$056A	$0FFF	    			ADDLW	255
$056C	$D7FB	    			BRA	L_Lcd_Custom_Config_38
$056E	$	L_Lcd_Custom_Config_39:
$056E	$C006	F01F			MOVFF	STACK_6, Lcd_Custom____mDB4
$0572	$C041	F000			MOVFF	FARG_Lcd_Custom_Config+8, STACK_0
$0576	$0E01	    			MOVLW	1
$0578	$6E05	    			MOVWF	STACK_5, 0
$057A	$5000	    			MOVF	STACK_0, 0, 0
$057C	$	L_Lcd_Custom_Config_40:
$057C	$E004	    			BZ	L_Lcd_Custom_Config_41
$057E	$3605	    			RLCF	STACK_5, 1, 0
$0580	$9005	    			BCF	STACK_5, 0, 0
$0582	$0FFF	    			ADDLW	255
$0584	$D7FB	    			BRA	L_Lcd_Custom_Config_40
$0586	$	L_Lcd_Custom_Config_41:
$0586	$C005	F019			MOVFF	STACK_5, Lcd_Custom____mRS
$058A	$C042	F000			MOVFF	FARG_Lcd_Custom_Config+9, STACK_0
$058E	$0E01	    			MOVLW	1
$0590	$6E04	    			MOVWF	STACK_4, 0
$0592	$5000	    			MOVF	STACK_0, 0, 0
$0594	$	L_Lcd_Custom_Config_42:
$0594	$E004	    			BZ	L_Lcd_Custom_Config_43
$0596	$3604	    			RLCF	STACK_4, 1, 0
$0598	$9004	    			BCF	STACK_4, 0, 0
$059A	$0FFF	    			ADDLW	255
$059C	$D7FB	    			BRA	L_Lcd_Custom_Config_42
$059E	$	L_Lcd_Custom_Config_43:
$059E	$C004	F01A			MOVFF	STACK_4, Lcd_Custom____mRW
$05A2	$C043	F000			MOVFF	FARG_Lcd_Custom_Config+10, STACK_0
$05A6	$0E01	    			MOVLW	1
$05A8	$6E03	    			MOVWF	STACK_3, 0
$05AA	$5000	    			MOVF	STACK_0, 0, 0
$05AC	$	L_Lcd_Custom_Config_44:
$05AC	$E004	    			BZ	L_Lcd_Custom_Config_45
$05AE	$3603	    			RLCF	STACK_3, 1, 0
$05B0	$9003	    			BCF	STACK_3, 0, 0
$05B2	$0FFF	    			ADDLW	255
$05B4	$D7FB	    			BRA	L_Lcd_Custom_Config_44
$05B6	$	L_Lcd_Custom_Config_45:
$05B6	$C003	F01B			MOVFF	STACK_3, Lcd_Custom____mENABLE
$05BA	$C039	F015			MOVFF	FARG_Lcd_Custom_Config+0, Lcd_Custom_dataport_address
$05BE	$C03A	F016			MOVFF	FARG_Lcd_Custom_Config+1, Lcd_Custom_dataport_address+1
$05C2	$C03F	F017			MOVFF	FARG_Lcd_Custom_Config+6, Lcd_Custom_ctrlport_address
$05C6	$C040	F018			MOVFF	FARG_Lcd_Custom_Config+7, Lcd_Custom_ctrlport_address+1
$05CA	$C015	FFE9			MOVFF	Lcd_Custom_dataport_address, FSR0L
$05CE	$C016	FFEA			MOVFF	Lcd_Custom_dataport_address+1, FSR0H
$05D2	$C017	FFE1			MOVFF	Lcd_Custom_ctrlport_address, FSR1L
$05D6	$C018	FFE2			MOVFF	Lcd_Custom_ctrlport_address+1, FSR1H
$05DA	$5001	    			MOVF	STACK_1, 0, 0
$05DC	$1002	    			IORWF	STACK_2, 0, 0
$05DE	$6E00	    			MOVWF	STACK_0, 0
$05E0	$5007	    			MOVF	STACK_7, 0, 0
$05E2	$1200	    			IORWF	STACK_0, 1, 0
$05E4	$5006	    			MOVF	STACK_6, 0, 0
$05E6	$1000	    			IORWF	STACK_0, 0, 0
$05E8	$6E02	    			MOVWF	STACK_2, 0
$05EA	$1C02	    			COMF	STACK_2, 0, 0
$05EC	$6E00	    			MOVWF	STACK_0, 0
$05EE	$5000	    			MOVF	STACK_0, 0, 0
$05F0	$16EF	    			ANDWF	INDF0, 1, 0
$05F2	$0E12	    			MOVLW	18
$05F4	$2415	    			ADDWF	Lcd_Custom_dataport_address, 0, 0
$05F6	$6E01	    			MOVWF	STACK_1, 0
$05F8	$C001	FFE9			MOVFF	STACK_1, FSR0L
$05FC	$C002	F000			MOVFF	STACK_2, STACK_0
$0600	$1E00	    			COMF	STACK_0, 1, 0
$0602	$5000	    			MOVF	STACK_0, 0, 0
$0604	$16EF	    			ANDWF	INDF0, 1, 0
$0606	$0E12	    			MOVLW	18
$0608	$5C01	    			SUBWF	STACK_1, 0, 0
$060A	$6EE9	    			MOVWF	FSR0L, 0
$060C	$5004	    			MOVF	STACK_4, 0, 0
$060E	$1005	    			IORWF	STACK_5, 0, 0
$0610	$6E00	    			MOVWF	STACK_0, 0
$0612	$5003	    			MOVF	STACK_3, 0, 0
$0614	$1200	    			IORWF	STACK_0, 1, 0
$0616	$1E00	    			COMF	STACK_0, 1, 0
$0618	$5000	    			MOVF	STACK_0, 0, 0
$061A	$16E7	    			ANDWF	INDF1, 1, 0
$061C	$0E12	    			MOVLW	18
$061E	$2417	    			ADDWF	Lcd_Custom_ctrlport_address, 0, 0
$0620	$6E01	    			MOVWF	STACK_1, 0
$0622	$C001	FFE1			MOVFF	STACK_1, FSR1L
$0626	$5000	    			MOVF	STACK_0, 0, 0
$0628	$16E7	    			ANDWF	INDF1, 1, 0
$062A	$0E12	    			MOVLW	18
$062C	$5C01	    			SUBWF	STACK_1, 0, 0
$062E	$6EE1	    			MOVWF	FSR1L, 0
$0630	$5006	    			MOVF	STACK_6, 0, 0
$0632	$1007	    			IORWF	STACK_7, 0, 0
$0634	$6E00	    			MOVWF	STACK_0, 0
$0636	$5000	    			MOVF	STACK_0, 0, 0
$0638	$12EF	    			IORWF	INDF0, 1, 0
$063A	$5003	    			MOVF	STACK_3, 0, 0
$063C	$12E7	    			IORWF	INDF1, 1, 0
$063E	$1C03	    			COMF	STACK_3, 0, 0
$0640	$6E00	    			MOVWF	STACK_0, 0
$0642	$5000	    			MOVF	STACK_0, 0, 0
$0644	$16E7	    			ANDWF	INDF1, 1, 0
$0646	$EC07	F000			CALL	_Delay_5500us
$064A	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$064C	$12E7	    			IORWF	INDF1, 1, 0
$064E	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$0650	$6E00	    			MOVWF	STACK_0, 0
$0652	$5000	    			MOVF	STACK_0, 0, 0
$0654	$16E7	    			ANDWF	INDF1, 1, 0
$0656	$EC07	F000			CALL	_Delay_5500us
$065A	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$065C	$12E7	    			IORWF	INDF1, 1, 0
$065E	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$0660	$6E00	    			MOVWF	STACK_0, 0
$0662	$5000	    			MOVF	STACK_0, 0, 0
$0664	$16E7	    			ANDWF	INDF1, 1, 0
$0666	$EC07	F000			CALL	_Delay_5500us
$066A	$501E	    			MOVF	Lcd_Custom____mDB5, 0, 0
$066C	$12EF	    			IORWF	INDF0, 1, 0
$066E	$1C1F	    			COMF	Lcd_Custom____mDB4, 0, 0
$0670	$6E00	    			MOVWF	STACK_0, 0
$0672	$5000	    			MOVF	STACK_0, 0, 0
$0674	$16EF	    			ANDWF	INDF0, 1, 0
$0676	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$0678	$12E7	    			IORWF	INDF1, 1, 0
$067A	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$067C	$6E00	    			MOVWF	STACK_0, 0
$067E	$5000	    			MOVF	STACK_0, 0, 0
$0680	$16E7	    			ANDWF	INDF1, 1, 0
$0682	$EC07	F000			CALL	_Delay_5500us
$0686	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$0688	$12E7	    			IORWF	INDF1, 1, 0
$068A	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$068C	$6E01	    			MOVWF	STACK_1, 0
$068E	$5001	    			MOVF	STACK_1, 0, 0
$0690	$16E7	    			ANDWF	INDF1, 1, 0
$0692	$1C1E	    			COMF	Lcd_Custom____mDB5, 0, 0
$0694	$6E00	    			MOVWF	STACK_0, 0
$0696	$5000	    			MOVF	STACK_0, 0, 0
$0698	$16EF	    			ANDWF	INDF0, 1, 0
$069A	$501C	    			MOVF	Lcd_Custom____mDB7, 0, 0
$069C	$12EF	    			IORWF	INDF0, 1, 0
$069E	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$06A0	$12E7	    			IORWF	INDF1, 1, 0
$06A2	$5001	    			MOVF	STACK_1, 0, 0
$06A4	$16E7	    			ANDWF	INDF1, 1, 0
$06A6	$EC07	F000			CALL	_Delay_5500us
$06AA	$1C1C	    			COMF	Lcd_Custom____mDB7, 0, 0
$06AC	$6E00	    			MOVWF	STACK_0, 0
$06AE	$5000	    			MOVF	STACK_0, 0, 0
$06B0	$16EF	    			ANDWF	INDF0, 1, 0
$06B2	$501F	    			MOVF	Lcd_Custom____mDB4, 0, 0
$06B4	$12EF	    			IORWF	INDF0, 1, 0
$06B6	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$06B8	$12E7	    			IORWF	INDF1, 1, 0
$06BA	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$06BC	$6E01	    			MOVWF	STACK_1, 0
$06BE	$5001	    			MOVF	STACK_1, 0, 0
$06C0	$16E7	    			ANDWF	INDF1, 1, 0
$06C2	$1C1F	    			COMF	Lcd_Custom____mDB4, 0, 0
$06C4	$6E00	    			MOVWF	STACK_0, 0
$06C6	$5000	    			MOVF	STACK_0, 0, 0
$06C8	$16EF	    			ANDWF	INDF0, 1, 0
$06CA	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$06CC	$12E7	    			IORWF	INDF1, 1, 0
$06CE	$5001	    			MOVF	STACK_1, 0, 0
$06D0	$16E7	    			ANDWF	INDF1, 1, 0
$06D2	$EC07	F000			CALL	_Delay_5500us
$06D6	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$06D8	$12E7	    			IORWF	INDF1, 1, 0
$06DA	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$06DC	$6E00	    			MOVWF	STACK_0, 0
$06DE	$5000	    			MOVF	STACK_0, 0, 0
$06E0	$16E7	    			ANDWF	INDF1, 1, 0
$06E2	$501F	    			MOVF	Lcd_Custom____mDB4, 0, 0
$06E4	$12EF	    			IORWF	INDF0, 1, 0
$06E6	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$06E8	$12E7	    			IORWF	INDF1, 1, 0
$06EA	$5000	    			MOVF	STACK_0, 0, 0
$06EC	$16E7	    			ANDWF	INDF1, 1, 0
$06EE	$EC07	F000			CALL	_Delay_5500us
$06F2	$1C1F	    			COMF	Lcd_Custom____mDB4, 0, 0
$06F4	$6E00	    			MOVWF	STACK_0, 0
$06F6	$5000	    			MOVF	STACK_0, 0, 0
$06F8	$16EF	    			ANDWF	INDF0, 1, 0
$06FA	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$06FC	$12E7	    			IORWF	INDF1, 1, 0
$06FE	$1C1B	    			COMF	Lcd_Custom____mENABLE, 0, 0
$0700	$6E01	    			MOVWF	STACK_1, 0
$0702	$5001	    			MOVF	STACK_1, 0, 0
$0704	$16E7	    			ANDWF	INDF1, 1, 0
$0706	$501E	    			MOVF	Lcd_Custom____mDB5, 0, 0
$0708	$101F	    			IORWF	Lcd_Custom____mDB4, 0, 0
$070A	$6E00	    			MOVWF	STACK_0, 0
$070C	$501D	    			MOVF	Lcd_Custom____mDB6, 0, 0
$070E	$1200	    			IORWF	STACK_0, 1, 0
$0710	$501C	    			MOVF	Lcd_Custom____mDB7, 0, 0
$0712	$1200	    			IORWF	STACK_0, 1, 0
$0714	$5000	    			MOVF	STACK_0, 0, 0
$0716	$12EF	    			IORWF	INDF0, 1, 0
$0718	$501B	    			MOVF	Lcd_Custom____mENABLE, 0, 0
$071A	$12E7	    			IORWF	INDF1, 1, 0
$071C	$5001	    			MOVF	STACK_1, 0, 0
$071E	$16E7	    			ANDWF	INDF1, 1, 0
$0720	$EC07	F000			CALL	_Delay_5500us
$0724	$0E01	    			MOVLW	1
$0726	$6E20	    			MOVWF	Lcd_Custom_lcdcmd_status, 0
$0728	$0012	    			RETURN
$072A	$	_eeprom_init:
$072A	$0E03	    			MOVLW	3
$072C	$6E3B	    			MOVWF	eeprom_init_x_L0+0, 0
$072E	$0E00	    			MOVLW	0
$0730	$6E3C	    			MOVWF	eeprom_init_x_L0+1, 0
$0732	$0E05	    			MOVLW	5
$0734	$6E3D	    			MOVWF	eeprom_init_x_L0+2, 0
$0736	$0E00	    			MOVLW	0
$0738	$6E3E	    			MOVWF	eeprom_init_x_L0+3, 0
$073A	$0E07	    			MOVLW	7
$073C	$6E3F	    			MOVWF	eeprom_init_x_L0+4, 0
$073E	$0E00	    			MOVLW	0
$0740	$6E40	    			MOVWF	eeprom_init_x_L0+5, 0
$0742	$0E08	    			MOVLW	8
$0744	$6E41	    			MOVWF	eeprom_init_x_L0+6, 0
$0746	$0E00	    			MOVLW	0
$0748	$6E42	    			MOVWF	eeprom_init_x_L0+7, 0
$074A	$0E09	    			MOVLW	9
$074C	$6E43	    			MOVWF	eeprom_init_x_L0+8, 0
$074E	$0E00	    			MOVLW	0
$0750	$6E44	    			MOVWF	eeprom_init_x_L0+9, 0
$0752	$0E07	    			MOVLW	7
$0754	$6E45	    			MOVWF	eeprom_init_tx_L0+0, 0
$0756	$0E00	    			MOVLW	0
$0758	$6E46	    			MOVWF	eeprom_init_tx_L0+1, 0
$075A	$0E0A	    			MOVLW	10
$075C	$6E47	    			MOVWF	eeprom_init_tx_L0+2, 0
$075E	$0E00	    			MOVLW	0
$0760	$6E48	    			MOVWF	eeprom_init_tx_L0+3, 0
$0762	$0E0D	    			MOVLW	13
$0764	$6E49	    			MOVWF	eeprom_init_tx_L0+4, 0
$0766	$0E00	    			MOVLW	0
$0768	$6E4A	    			MOVWF	eeprom_init_tx_L0+5, 0
$076A	$0E03	    			MOVLW	3
$076C	$6E4B	    			MOVWF	eeprom_init_tx_L0+6, 0
$076E	$0E00	    			MOVLW	0
$0770	$6E4C	    			MOVWF	eeprom_init_tx_L0+7, 0
$0772	$0E01	    			MOVLW	1
$0774	$6E4D	    			MOVWF	eeprom_init_tx_L0+8, 0
$0776	$0E00	    			MOVLW	0
$0778	$6E4E	    			MOVWF	eeprom_init_tx_L0+9, 0
;eeprom_8.c,53 :: 			void eeprom_init (void) {
;eeprom_8.c,54 :: 			int i, x[5] = {3, 5, 7, 8, 9}, tx[5] = {7, 10 , 13, 3, 1}, key = 20, value = 30;
$077A	$0E14	    			MOVLW	20
$077C	$6E4F	    			MOVWF	eeprom_init_key_L0, 0
$077E	$0E00	    			MOVLW	0
$0780	$6E50	    			MOVWF	eeprom_init_key_L0+1, 0
$0782	$0E1E	    			MOVLW	30
$0784	$6E51	    			MOVWF	eeprom_init_value_L0, 0
$0786	$0E00	    			MOVLW	0
$0788	$6E52	    			MOVWF	eeprom_init_value_L0+1, 0
;eeprom_8.c,56 :: 			for (i = 0; i < 5; i++) {
$078A	$6A39	    			CLRF	eeprom_init_i_L0, 0
$078C	$6A3A	    			CLRF	eeprom_init_i_L0+1, 0
$078E	$	L_eeprom_init_5:
$078E	$0E80	    			MOVLW	128
$0790	$183A	    			XORWF	eeprom_init_i_L0+1, 0, 0
$0792	$6E00	    			MOVWF	STACK_0, 0
$0794	$0E80	    			MOVLW	128
$0796	$5C00	    			SUBWF	STACK_0, 0, 0
$0798	$E102	    			BNZ	L_eeprom_init_34
$079A	$0E05	    			MOVLW	5
$079C	$5C39	    			SUBWF	eeprom_init_i_L0, 0, 0
$079E	$	L_eeprom_init_34:
$079E	$B0D8	    			BTFSC	STATUS, C, 0
$07A0	$D07B	    			BRA	L_eeprom_init_6
;eeprom_8.c,57 :: 			w_24c04(key + i, x[i]);
$07A2	$5039	    			MOVF	eeprom_init_i_L0, 0, 0
$07A4	$244F	    			ADDWF	eeprom_init_key_L0, 0, 0
$07A6	$6E6C	    			MOVWF	FARG_w_24c04+0, 0
$07A8	$503A	    			MOVF	eeprom_init_i_L0+1, 0, 0
$07AA	$2050	    			ADDWFC	eeprom_init_key_L0+1, 0, 0
$07AC	$6E6D	    			MOVWF	FARG_w_24c04+1, 0
$07AE	$0E01	    			MOVLW	1
$07B0	$6E04	    			MOVWF	STACK_4, 0
$07B2	$C039	F000			MOVFF	eeprom_init_i_L0, STACK_0
$07B6	$C03A	F001			MOVFF	eeprom_init_i_L0+1, STACK_0+1
$07BA	$5004	    			MOVF	STACK_4, 0, 0
$07BC	$	L_eeprom_init_35:
$07BC	$E005	    			BZ	L_eeprom_init_36
$07BE	$3600	    			RLCF	STACK_0, 1, 0
$07C0	$9000	    			BCF	STACK_0, 0, 0
$07C2	$3601	    			RLCF	STACK_0+1, 1, 0
$07C4	$0FFF	    			ADDLW	255
$07C6	$D7FA	    			BRA	L_eeprom_init_35
$07C8	$	L_eeprom_init_36:
$07C8	$0E3B	    			MOVLW	eeprom_init_x_L0
$07CA	$2400	    			ADDWF	STACK_0, 0, 0
$07CC	$6EE9	    			MOVWF	FSR0L, 0
$07CE	$0E00	    			MOVLW	@eeprom_init_x_L0
$07D0	$2001	    			ADDWFC	STACK_0+1, 0, 0
$07D2	$6EEA	    			MOVWF	FSR0L+1, 0
$07D4	$CFEE	F06E			MOVFF	POSTINC0, FARG_w_24c04+2
$07D8	$ECB1	F001			CALL	_w_24c04
;eeprom_8.c,58 :: 			delay_ms(300);
$07DC	$0E04	    			MOVLW	4
$07DE	$6E0C	    			MOVWF	STACK_12, 0
$07E0	$0EFF	    			MOVLW	255
$07E2	$6E0B	    			MOVWF	STACK_11, 0
$07E4	$0EFF	    			MOVLW	255
$07E6	$6E0A	    			MOVWF	STACK_10, 0
$07E8	$2E0C	    			DECFSZ	STACK_12, F, 0
$07EA	$D001	    			BRA	$+2
$07EC	$D007	    			BRA	$+8
$07EE	$2E0B	    			DECFSZ	STACK_11, F, 0
$07F0	$D001	    			BRA	$+2
$07F2	$D003	    			BRA	$+4
$07F4	$2E0A	    			DECFSZ	STACK_10, F, 0
$07F6	$D7FE	    			BRA	$-1
$07F8	$D7FA	    			BRA	$-5
$07FA	$D7F6	    			BRA	$-9
$07FC	$0E10	    			MOVLW	16
$07FE	$6E0B	    			MOVWF	STACK_11, 0
$0800	$0EFF	    			MOVLW	255
$0802	$6E0A	    			MOVWF	STACK_10, 0
$0804	$2E0B	    			DECFSZ	STACK_11, F, 0
$0806	$D001	    			BRA	$+2
$0808	$D003	    			BRA	$+4
$080A	$2E0A	    			DECFSZ	STACK_10, F, 0
$080C	$D7FE	    			BRA	$-1
$080E	$D7FA	    			BRA	$-5
$0810	$0E26	    			MOVLW	38
$0812	$6E0A	    			MOVWF	STACK_10, 0
$0814	$2E0A	    			DECFSZ	STACK_10, F, 0
$0816	$D7FE	    			BRA	$-1
$0818	$0000	    			NOP
;eeprom_8.c,59 :: 			w_24c04(value + i, tx[i]);
$081A	$5039	    			MOVF	eeprom_init_i_L0, 0, 0
$081C	$2451	    			ADDWF	eeprom_init_value_L0, 0, 0
$081E	$6E6C	    			MOVWF	FARG_w_24c04+0, 0
$0820	$503A	    			MOVF	eeprom_init_i_L0+1, 0, 0
$0822	$2052	    			ADDWFC	eeprom_init_value_L0+1, 0, 0
$0824	$6E6D	    			MOVWF	FARG_w_24c04+1, 0
$0826	$0E01	    			MOVLW	1
$0828	$6E04	    			MOVWF	STACK_4, 0
$082A	$C039	F000			MOVFF	eeprom_init_i_L0, STACK_0
$082E	$C03A	F001			MOVFF	eeprom_init_i_L0+1, STACK_0+1
$0832	$5004	    			MOVF	STACK_4, 0, 0
$0834	$	L_eeprom_init_37:
$0834	$E005	    			BZ	L_eeprom_init_38
$0836	$3600	    			RLCF	STACK_0, 1, 0
$0838	$9000	    			BCF	STACK_0, 0, 0
$083A	$3601	    			RLCF	STACK_0+1, 1, 0
$083C	$0FFF	    			ADDLW	255
$083E	$D7FA	    			BRA	L_eeprom_init_37
$0840	$	L_eeprom_init_38:
$0840	$0E45	    			MOVLW	eeprom_init_tx_L0
$0842	$2400	    			ADDWF	STACK_0, 0, 0
$0844	$6EE9	    			MOVWF	FSR0L, 0
$0846	$0E00	    			MOVLW	@eeprom_init_tx_L0
$0848	$2001	    			ADDWFC	STACK_0+1, 0, 0
$084A	$6EEA	    			MOVWF	FSR0L+1, 0
$084C	$CFEE	F06E			MOVFF	POSTINC0, FARG_w_24c04+2
$0850	$ECB1	F001			CALL	_w_24c04
;eeprom_8.c,60 :: 			delay_ms(300);
$0854	$0E04	    			MOVLW	4
$0856	$6E0C	    			MOVWF	STACK_12, 0
$0858	$0EFF	    			MOVLW	255
$085A	$6E0B	    			MOVWF	STACK_11, 0
$085C	$0EFF	    			MOVLW	255
$085E	$6E0A	    			MOVWF	STACK_10, 0
$0860	$2E0C	    			DECFSZ	STACK_12, F, 0
$0862	$D001	    			BRA	$+2
$0864	$D007	    			BRA	$+8
$0866	$2E0B	    			DECFSZ	STACK_11, F, 0
$0868	$D001	    			BRA	$+2
$086A	$D003	    			BRA	$+4
$086C	$2E0A	    			DECFSZ	STACK_10, F, 0
$086E	$D7FE	    			BRA	$-1
$0870	$D7FA	    			BRA	$-5
$0872	$D7F6	    			BRA	$-9
$0874	$0E10	    			MOVLW	16
$0876	$6E0B	    			MOVWF	STACK_11, 0
$0878	$0EFF	    			MOVLW	255
$087A	$6E0A	    			MOVWF	STACK_10, 0
$087C	$2E0B	    			DECFSZ	STACK_11, F, 0
$087E	$D001	    			BRA	$+2
$0880	$D003	    			BRA	$+4
$0882	$2E0A	    			DECFSZ	STACK_10, F, 0
$0884	$D7FE	    			BRA	$-1
$0886	$D7FA	    			BRA	$-5
$0888	$0E26	    			MOVLW	38
$088A	$6E0A	    			MOVWF	STACK_10, 0
$088C	$2E0A	    			DECFSZ	STACK_10, F, 0
$088E	$D7FE	    			BRA	$-1
$0890	$0000	    			NOP
;eeprom_8.c,61 :: 			}
$0892	$	L_eeprom_init_7:
;eeprom_8.c,56 :: 			for (i = 0; i < 5; i++) {
$0892	$4A39	    			INFSNZ	eeprom_init_i_L0, 1, 0
$0894	$2A3A	    			INCF	eeprom_init_i_L0+1, 1, 0
;eeprom_8.c,61 :: 			}
$0896	$D77B	    			BRA	L_eeprom_init_5
$0898	$	L_eeprom_init_6:
;eeprom_8.c,62 :: 			}
$0898	$0012	    			RETURN
$089A	$	_solve:
$089A	$0E79	    			MOVLW	121
$089C	$6E3B	    			MOVWF	lstr1_eeprom_8+0, 0
$089E	$0E3D	    			MOVLW	61
$08A0	$6E3C	    			MOVWF	lstr1_eeprom_8+1, 0
$08A2	$0E35	    			MOVLW	53
$08A4	$6E3D	    			MOVWF	lstr1_eeprom_8+2, 0
$08A6	$0E2A	    			MOVLW	42
$08A8	$6E3E	    			MOVWF	lstr1_eeprom_8+3, 0
$08AA	$0E28	    			MOVLW	40
$08AC	$6E3F	    			MOVWF	lstr1_eeprom_8+4, 0
$08AE	$0E32	    			MOVLW	50
$08B0	$6E40	    			MOVWF	lstr1_eeprom_8+5, 0
$08B2	$0E2B	    			MOVLW	43
$08B4	$6E41	    			MOVWF	lstr1_eeprom_8+6, 0
$08B6	$0E54	    			MOVLW	84
$08B8	$6E42	    			MOVWF	lstr1_eeprom_8+7, 0
$08BA	$0E5B	    			MOVLW	91
$08BC	$6E43	    			MOVWF	lstr1_eeprom_8+8, 0
$08BE	$0E78	    			MOVLW	120
$08C0	$6E44	    			MOVWF	lstr1_eeprom_8+9, 0
$08C2	$0E5D	    			MOVLW	93
$08C4	$6E45	    			MOVWF	lstr1_eeprom_8+10, 0
$08C6	$0E2D	    			MOVLW	45
$08C8	$6E46	    			MOVWF	lstr1_eeprom_8+11, 0
$08CA	$0E78	    			MOVLW	120
$08CC	$6E47	    			MOVWF	lstr1_eeprom_8+12, 0
$08CE	$0E29	    			MOVLW	41
$08D0	$6E48	    			MOVWF	lstr1_eeprom_8+13, 0
$08D2	$6A49	    			CLRF	lstr1_eeprom_8+14, 0
$08D4	$0E56	    			MOVLW	86
$08D6	$6E4A	    			MOVWF	lstr2_eeprom_8+0, 0
$08D8	$0E61	    			MOVLW	97
$08DA	$6E4B	    			MOVWF	lstr2_eeprom_8+1, 0
$08DC	$0E6C	    			MOVLW	108
$08DE	$6E4C	    			MOVWF	lstr2_eeprom_8+2, 0
$08E0	$0E6F	    			MOVLW	111
$08E2	$6E4D	    			MOVWF	lstr2_eeprom_8+3, 0
$08E4	$0E72	    			MOVLW	114
$08E6	$6E4E	    			MOVWF	lstr2_eeprom_8+4, 0
$08E8	$0E20	    			MOVLW	32
$08EA	$6E4F	    			MOVWF	lstr2_eeprom_8+5, 0
$08EC	$0E6E	    			MOVLW	110
$08EE	$6E50	    			MOVWF	lstr2_eeprom_8+6, 0
$08F0	$0EC3	    			MOVLW	195
$08F2	$6E51	    			MOVWF	lstr2_eeprom_8+7, 0
$08F4	$0EA3	    			MOVLW	163
$08F6	$6E52	    			MOVWF	lstr2_eeprom_8+8, 0
$08F8	$0E6F	    			MOVLW	111
$08FA	$6E53	    			MOVWF	lstr2_eeprom_8+9, 0
$08FC	$0E20	    			MOVLW	32
$08FE	$6E54	    			MOVWF	lstr2_eeprom_8+10, 0
$0900	$0E64	    			MOVLW	100
$0902	$6E55	    			MOVWF	lstr2_eeprom_8+11, 0
$0904	$0E65	    			MOVLW	101
$0906	$6E56	    			MOVWF	lstr2_eeprom_8+12, 0
$0908	$0E66	    			MOVLW	102
$090A	$6E57	    			MOVWF	lstr2_eeprom_8+13, 0
$090C	$0E69	    			MOVLW	105
$090E	$6E58	    			MOVWF	lstr2_eeprom_8+14, 0
$0910	$0E6E	    			MOVLW	110
$0912	$6E59	    			MOVWF	lstr2_eeprom_8+15, 0
$0914	$0E69	    			MOVLW	105
$0916	$6E5A	    			MOVWF	lstr2_eeprom_8+16, 0
$0918	$0E64	    			MOVLW	100
$091A	$6E5B	    			MOVWF	lstr2_eeprom_8+17, 0
$091C	$0E6F	    			MOVLW	111
$091E	$6E5C	    			MOVWF	lstr2_eeprom_8+18, 0
$0920	$6A5D	    			CLRF	lstr2_eeprom_8+19, 0
;eeprom_8.c,28 :: 			void solve (int x) {
;eeprom_8.c,31 :: 			i = 0;
$0922	$6A6A	    			CLRF	solve_i_L0, 0
$0924	$6A6B	    			CLRF	solve_i_L0+1, 0
;eeprom_8.c,32 :: 			tx = -1;
$0926	$0EFF	    			MOVLW	255
$0928	$6E68	    			MOVWF	solve_tx_L0, 0
$092A	$0EFF	    			MOVLW	255
$092C	$6E69	    			MOVWF	solve_tx_L0+1, 0
;eeprom_8.c,33 :: 			trisd = 0;
$092E	$6A95	    			CLRF	TRISD, 0
;eeprom_8.c,34 :: 			lcd_custom_cmd(lcd_clear);
$0930	$0E01	    			MOVLW	1
$0932	$6E7A	    			MOVWF	FARG_Lcd_Custom_Cmd+0, 0
$0934	$EC1C	F000			CALL	_Lcd_Custom_Cmd
;eeprom_8.c,35 :: 			lcd_custom_out(1, 1, "y=5*(2+T[x]-x)");
$0938	$0E01	    			MOVLW	1
$093A	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$093C	$0E01	    			MOVLW	1
$093E	$6E75	    			MOVWF	FARG_Lcd_Custom_Out+1, 0
$0940	$0E3B	    			MOVLW	lstr1_eeprom_8
$0942	$6E76	    			MOVWF	FARG_Lcd_Custom_Out+2, 0
$0944	$0E00	    			MOVLW	@lstr1_eeprom_8
$0946	$6E77	    			MOVWF	FARG_Lcd_Custom_Out+3, 0
$0948	$EC15	F001			CALL	_Lcd_Custom_Out
;eeprom_8.c,37 :: 			while (i < 5) {
$094C	$	L_solve_0:
$094C	$0E80	    			MOVLW	128
$094E	$186B	    			XORWF	solve_i_L0+1, 0, 0
$0950	$6E00	    			MOVWF	STACK_0, 0
$0952	$0E80	    			MOVLW	128
$0954	$5C00	    			SUBWF	STACK_0, 0, 0
$0956	$E102	    			BNZ	L_solve_31
$0958	$0E05	    			MOVLW	5
$095A	$5C6A	    			SUBWF	solve_i_L0, 0, 0
$095C	$	L_solve_31:
$095C	$E21D	    			BC	L_solve_1
;eeprom_8.c,38 :: 			if (r_24c04(20 + i) == x) {
$095E	$0E14	    			MOVLW	20
$0960	$246A	    			ADDWF	solve_i_L0, 0, 0
$0962	$6E6C	    			MOVWF	FARG_r_24c04+0, 0
$0964	$0E00	    			MOVLW	0
$0966	$206B	    			ADDWFC	solve_i_L0+1, 0, 0
$0968	$6E6D	    			MOVWF	FARG_r_24c04+1, 0
$096A	$ECC2	F001			CALL	_r_24c04
$096E	$5001	    			MOVF	STACK_0+1, 0, 0
$0970	$183A	    			XORWF	FARG_solve+1, 0, 0
$0972	$E102	    			BNZ	L_solve_32
$0974	$5039	    			MOVF	FARG_solve+0, 0, 0
$0976	$1800	    			XORWF	STACK_0, 0, 0
$0978	$	L_solve_32:
$0978	$E10C	    			BNZ	L_solve_2
;eeprom_8.c,39 :: 			tx = r_24c04(30 + i);
$097A	$0E1E	    			MOVLW	30
$097C	$246A	    			ADDWF	solve_i_L0, 0, 0
$097E	$6E6C	    			MOVWF	FARG_r_24c04+0, 0
$0980	$0E00	    			MOVLW	0
$0982	$206B	    			ADDWFC	solve_i_L0+1, 0, 0
$0984	$6E6D	    			MOVWF	FARG_r_24c04+1, 0
$0986	$ECC2	F001			CALL	_r_24c04
$098A	$C000	F068			MOVFF	STACK_0, solve_tx_L0
$098E	$C001	F069			MOVFF	STACK_0+1, solve_tx_L0+1
;eeprom_8.c,40 :: 			}
$0992	$	L_solve_2:
;eeprom_8.c,41 :: 			i = i + 1;
$0992	$4A6A	    			INFSNZ	solve_i_L0, 1, 0
$0994	$2A6B	    			INCF	solve_i_L0+1, 1, 0
;eeprom_8.c,42 :: 			}
$0996	$D7DA	    			BRA	L_solve_0
$0998	$	L_solve_1:
;eeprom_8.c,43 :: 			if (tx == -1) {
$0998	$0EFF	    			MOVLW	255
$099A	$1869	    			XORWF	solve_tx_L0+1, 0, 0
$099C	$E102	    			BNZ	L_solve_33
$099E	$0EFF	    			MOVLW	255
$09A0	$1868	    			XORWF	solve_tx_L0, 0, 0
$09A2	$	L_solve_33:
$09A2	$E107	    			BNZ	L_solve_3
;eeprom_8.c,44 :: 			lcd("Valor não definido");
$09A4	$0E4A	    			MOVLW	lstr2_eeprom_8
$09A6	$6E6C	    			MOVWF	FARG_lcd+0, 0
$09A8	$0E00	    			MOVLW	@lstr2_eeprom_8
$09AA	$6E6D	    			MOVWF	FARG_lcd+1, 0
$09AC	$ECE0	F001			CALL	_lcd
;eeprom_8.c,45 :: 			} else {
$09B0	$D028	    			BRA	L_solve_4
$09B2	$	L_solve_3:
;eeprom_8.c,46 :: 			tx = 5 * ( 2 + tx- x);
$09B2	$0E02	    			MOVLW	2
$09B4	$2468	    			ADDWF	solve_tx_L0, 0, 0
$09B6	$6E00	    			MOVWF	STACK_0, 0
$09B8	$0E00	    			MOVLW	0
$09BA	$2069	    			ADDWFC	solve_tx_L0+1, 0, 0
$09BC	$6E01	    			MOVWF	STACK_0+1, 0
$09BE	$5039	    			MOVF	FARG_solve+0, 0, 0
$09C0	$5E00	    			SUBWF	STACK_0, 1, 0
$09C2	$503A	    			MOVF	FARG_solve+1, 0, 0
$09C4	$5A01	    			SUBWFB	STACK_0+1, 1, 0
$09C6	$0E05	    			MOVLW	5
$09C8	$6E04	    			MOVWF	STACK_4, 0
$09CA	$0E00	    			MOVLW	0
$09CC	$6E05	    			MOVWF	STACK_4+1, 0
$09CE	$EC4F	F002			CALL	_mul_16x16_s
$09D2	$C000	F068			MOVFF	STACK_0, solve_tx_L0
$09D6	$C001	F069			MOVFF	STACK_0+1, solve_tx_L0+1
;eeprom_8.c,47 :: 			intToStr(tx, aux);
$09DA	$C000	F06C			MOVFF	STACK_0, FARG_IntToStr+0
$09DE	$C001	F06D			MOVFF	STACK_0+1, FARG_IntToStr+1
$09E2	$0E5E	    			MOVLW	solve_aux_L0
$09E4	$6E6E	    			MOVWF	FARG_IntToStr+2, 0
$09E6	$0E00	    			MOVLW	@solve_aux_L0
$09E8	$6E6F	    			MOVWF	FARG_IntToStr+3, 0
$09EA	$ECF2	F001			CALL	_IntToStr
;eeprom_8.c,48 :: 			lcd_custom_out(2, 1, aux);
$09EE	$0E02	    			MOVLW	2
$09F0	$6E74	    			MOVWF	FARG_Lcd_Custom_Out+0, 0
$09F2	$0E01	    			MOVLW	1
$09F4	$6E75	    			MOVWF	FARG_Lcd_Custom_Out+1, 0
$09F6	$0E5E	    			MOVLW	solve_aux_L0
$09F8	$6E76	    			MOVWF	FARG_Lcd_Custom_Out+2, 0
$09FA	$0E00	    			MOVLW	@solve_aux_L0
$09FC	$6E77	    			MOVWF	FARG_Lcd_Custom_Out+3, 0
$09FE	$EC15	F001			CALL	_Lcd_Custom_Out
;eeprom_8.c,49 :: 			}
$0A02	$	L_solve_4:
;eeprom_8.c,50 :: 			trisd = 255;
$0A02	$0EFF	    			MOVLW	255
$0A04	$6E95	    			MOVWF	TRISD, 0
;eeprom_8.c,51 :: 			}
$0A06	$0012	    			RETURN
$0A08	$	_I2C_Init:
$0A08	$9CC7	    			BCF	SSPSTAT, 6, 0
$0A0A	$9EC7	    			BCF	SSPSTAT, 7, 0
$0A0C	$8894	    			BSF	TRISC, 4, 0
$0A0E	$8694	    			BSF	TRISC, 3, 0
$0A10	$0E38	    			MOVLW	56
$0A12	$6EC6	    			MOVWF	SSPCON1, 0
$0A14	$0012	    			RETURN
$0A16	$	_main:
$0A16	$0E43	    			MOVLW	67
$0A18	$6E21	    			MOVWF	lstr3_eeprom_8+0, 0
$0A1A	$0E61	    			MOVLW	97
$0A1C	$6E22	    			MOVWF	lstr3_eeprom_8+1, 0
$0A1E	$0E72	    			MOVLW	114
$0A20	$6E23	    			MOVWF	lstr3_eeprom_8+2, 0
$0A22	$0E72	    			MOVLW	114
$0A24	$6E24	    			MOVWF	lstr3_eeprom_8+3, 0
$0A26	$0E65	    			MOVLW	101
$0A28	$6E25	    			MOVWF	lstr3_eeprom_8+4, 0
$0A2A	$0E67	    			MOVLW	103
$0A2C	$6E26	    			MOVWF	lstr3_eeprom_8+5, 0
$0A2E	$0E61	    			MOVLW	97
$0A30	$6E27	    			MOVWF	lstr3_eeprom_8+6, 0
$0A32	$0E6E	    			MOVLW	110
$0A34	$6E28	    			MOVWF	lstr3_eeprom_8+7, 0
$0A36	$0E64	    			MOVLW	100
$0A38	$6E29	    			MOVWF	lstr3_eeprom_8+8, 0
$0A3A	$0E6F	    			MOVLW	111
$0A3C	$6E2A	    			MOVWF	lstr3_eeprom_8+9, 0
$0A3E	$6A2B	    			CLRF	lstr3_eeprom_8+10, 0
$0A40	$0E50	    			MOVLW	80
$0A42	$6E2C	    			MOVWF	lstr4_eeprom_8+0, 0
$0A44	$0E72	    			MOVLW	114
$0A46	$6E2D	    			MOVWF	lstr4_eeprom_8+1, 0
$0A48	$0E6F	    			MOVLW	111
$0A4A	$6E2E	    			MOVWF	lstr4_eeprom_8+2, 0
$0A4C	$0E6E	    			MOVLW	110
$0A4E	$6E2F	    			MOVWF	lstr4_eeprom_8+3, 0
$0A50	$0E74	    			MOVLW	116
$0A52	$6E30	    			MOVWF	lstr4_eeprom_8+4, 0
$0A54	$0E6F	    			MOVLW	111
$0A56	$6E31	    			MOVWF	lstr4_eeprom_8+5, 0
$0A58	$6A32	    			CLRF	lstr4_eeprom_8+6, 0
$0A5A	$6A33	    			CLRF	lstr5_eeprom_8+0, 0
$0A5C	$0E3C	    			MOVLW	60
$0A5E	$6E34	    			MOVWF	lstr6_eeprom_8+0, 0
$0A60	$0E2D	    			MOVLW	45
$0A62	$6E35	    			MOVWF	lstr6_eeprom_8+1, 0
$0A64	$0E2D	    			MOVLW	45
$0A66	$6E36	    			MOVWF	lstr6_eeprom_8+2, 0
$0A68	$6A37	    			CLRF	lstr6_eeprom_8+3, 0
;eeprom_8.c,64 :: 			void main () {
;eeprom_8.c,67 :: 			ADCON1 = 0x06;
$0A6A	$0E06	    			MOVLW	6
$0A6C	$6EC1	    			MOVWF	ADCON1, 0
;eeprom_8.c,68 :: 			trise = 0;
$0A6E	$6A96	    			CLRF	TRISE, 0
;eeprom_8.c,69 :: 			trisa = 0;
$0A70	$6A92	    			CLRF	TRISA, 0
;eeprom_8.c,70 :: 			portb = 0xff;
$0A72	$0EFF	    			MOVLW	255
$0A74	$6E81	    			MOVWF	PORTB, 0
;eeprom_8.c,71 :: 			portd = 0xff;
$0A76	$0EFF	    			MOVLW	255
$0A78	$6E83	    			MOVWF	PORTD, 0
;eeprom_8.c,72 :: 			trisd = 0xff;
$0A7A	$0EFF	    			MOVLW	255
$0A7C	$6E95	    			MOVWF	TRISD, 0
;eeprom_8.c,73 :: 			trisb = 0;
$0A7E	$6A93	    			CLRF	TRISB, 0
;eeprom_8.c,74 :: 			i2c_init(100000);
$0A80	$0E14	    			MOVLW	20
$0A82	$6EC8	    			MOVWF	SSPADD, 0
$0A84	$EC04	F005			CALL	_I2C_Init
;eeprom_8.c,75 :: 			lcd_custom_config(&portd, 7, 6, 5, 4, &porte, 2, 0, 1);
$0A88	$0E83	    			MOVLW	PORTD
$0A8A	$6E39	    			MOVWF	FARG_Lcd_Custom_Config+0, 0
$0A8C	$0E0F	    			MOVLW	@PORTD
$0A8E	$6E3A	    			MOVWF	FARG_Lcd_Custom_Config+1, 0
$0A90	$0E07	    			MOVLW	7
$0A92	$6E3B	    			MOVWF	FARG_Lcd_Custom_Config+2, 0
$0A94	$0E06	    			MOVLW	6
$0A96	$6E3C	    			MOVWF	FARG_Lcd_Custom_Config+3, 0
$0A98	$0E05	    			MOVLW	5
$0A9A	$6E3D	    			MOVWF	FARG_Lcd_Custom_Config+4, 0
$0A9C	$0E04	    			MOVLW	4
$0A9E	$6E3E	    			MOVWF	FARG_Lcd_Custom_Config+5, 0
$0AA0	$0E84	    			MOVLW	PORTE
$0AA2	$6E3F	    			MOVWF	FARG_Lcd_Custom_Config+6, 0
$0AA4	$0E0F	    			MOVLW	@PORTE
$0AA6	$6E40	    			MOVWF	FARG_Lcd_Custom_Config+7, 0
$0AA8	$0E02	    			MOVLW	2
$0AAA	$6E41	    			MOVWF	FARG_Lcd_Custom_Config+8, 0
$0AAC	$6A42	    			CLRF	FARG_Lcd_Custom_Config+9, 0
$0AAE	$0E01	    			MOVLW	1
$0AB0	$6E43	    			MOVWF	FARG_Lcd_Custom_Config+10, 0
$0AB2	$EC83	F002			CALL	_Lcd_Custom_Config
;eeprom_8.c,76 :: 			lcd_custom_cmd(lcd_clear);
$0AB6	$0E01	    			MOVLW	1
$0AB8	$6E7A	    			MOVWF	FARG_Lcd_Custom_Cmd+0, 0
$0ABA	$EC1C	F000			CALL	_Lcd_Custom_Cmd
;eeprom_8.c,77 :: 			lcd_custom_cmd(lcd_cursor_off);
$0ABE	$0E0C	    			MOVLW	12
$0AC0	$6E7A	    			MOVWF	FARG_Lcd_Custom_Cmd+0, 0
$0AC2	$EC1C	F000			CALL	_Lcd_Custom_Cmd
;eeprom_8.c,78 :: 			lcd("Carregando");
$0AC6	$0E21	    			MOVLW	lstr3_eeprom_8
$0AC8	$6E6C	    			MOVWF	FARG_lcd+0, 0
$0ACA	$0E00	    			MOVLW	@lstr3_eeprom_8
$0ACC	$6E6D	    			MOVWF	FARG_lcd+1, 0
$0ACE	$ECE0	F001			CALL	_lcd
;eeprom_8.c,79 :: 			eeprom_init();
$0AD2	$EC95	F003			CALL	_eeprom_init
;eeprom_8.c,80 :: 			lcd("Pronto");
$0AD6	$0E2C	    			MOVLW	lstr4_eeprom_8
$0AD8	$6E6C	    			MOVWF	FARG_lcd+0, 0
$0ADA	$0E00	    			MOVLW	@lstr4_eeprom_8
$0ADC	$6E6D	    			MOVWF	FARG_lcd+1, 0
$0ADE	$ECE0	F001			CALL	_lcd
;eeprom_8.c,81 :: 			delay_ms(1000);
$0AE2	$0E0B	    			MOVLW	11
$0AE4	$6E0C	    			MOVWF	STACK_12, 0
$0AE6	$0EFF	    			MOVLW	255
$0AE8	$6E0B	    			MOVWF	STACK_11, 0
$0AEA	$0EFF	    			MOVLW	255
$0AEC	$6E0A	    			MOVWF	STACK_10, 0
$0AEE	$2E0C	    			DECFSZ	STACK_12, F, 0
$0AF0	$D001	    			BRA	$+2
$0AF2	$D007	    			BRA	$+8
$0AF4	$2E0B	    			DECFSZ	STACK_11, F, 0
$0AF6	$D001	    			BRA	$+2
$0AF8	$D003	    			BRA	$+4
$0AFA	$2E0A	    			DECFSZ	STACK_10, F, 0
$0AFC	$D7FE	    			BRA	$-1
$0AFE	$D7FA	    			BRA	$-5
$0B00	$D7F6	    			BRA	$-9
$0B02	$0E33	    			MOVLW	51
$0B04	$6E0B	    			MOVWF	STACK_11, 0
$0B06	$0EFF	    			MOVLW	255
$0B08	$6E0A	    			MOVWF	STACK_10, 0
$0B0A	$2E0B	    			DECFSZ	STACK_11, F, 0
$0B0C	$D001	    			BRA	$+2
$0B0E	$D003	    			BRA	$+4
$0B10	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B12	$D7FE	    			BRA	$-1
$0B14	$D7FA	    			BRA	$-5
$0B16	$0E88	    			MOVLW	136
$0B18	$6E0A	    			MOVWF	STACK_10, 0
$0B1A	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B1C	$D7FE	    			BRA	$-1
$0B1E	$0000	    			NOP
$0B20	$0000	    			NOP
;eeprom_8.c,82 :: 			lcd("");
$0B22	$0E33	    			MOVLW	lstr5_eeprom_8
$0B24	$6E6C	    			MOVWF	FARG_lcd+0, 0
$0B26	$0E00	    			MOVLW	@lstr5_eeprom_8
$0B28	$6E6D	    			MOVWF	FARG_lcd+1, 0
$0B2A	$ECE0	F001			CALL	_lcd
;eeprom_8.c,83 :: 			do {
$0B2E	$	L_main_8:
;eeprom_8.c,84 :: 			portb.rb0 = 0;
$0B2E	$9081	    			BCF	PORTB, 0, 0
;eeprom_8.c,85 :: 			var2 = portd;
$0B30	$CF83	F038			MOVFF	PORTD, main_var2_L0
;eeprom_8.c,86 :: 			if (var2.f0 == 0) {
$0B34	$0E01	    			MOVLW	1
$0B36	$1438	    			ANDWF	main_var2_L0, 0, 0
$0B38	$6E01	    			MOVWF	STACK_1, 0
$0B3A	$5001	    			MOVF	STACK_1, 0, 0
$0B3C	$0A00	    			XORLW	0
$0B3E	$E107	    			BNZ	L_main_10
;eeprom_8.c,87 :: 			lcd("<--");
$0B40	$0E34	    			MOVLW	lstr6_eeprom_8
$0B42	$6E6C	    			MOVWF	FARG_lcd+0, 0
$0B44	$0E00	    			MOVLW	@lstr6_eeprom_8
$0B46	$6E6D	    			MOVWF	FARG_lcd+1, 0
$0B48	$ECE0	F001			CALL	_lcd
;eeprom_8.c,88 :: 			} else if (var2.f1 == 0) {
$0B4C	$D026	    			BRA	L_main_11
$0B4E	$	L_main_10:
$0B4E	$6A01	    			CLRF	STACK_1, 0
$0B50	$B238	    			BTFSC	main_var2_L0, 1, 0
$0B52	$2A01	    			INCF	STACK_1, 1, 0
$0B54	$5001	    			MOVF	STACK_1, 0, 0
$0B56	$0A00	    			XORLW	0
$0B58	$E107	    			BNZ	L_main_12
;eeprom_8.c,89 :: 			solve(7);
$0B5A	$0E07	    			MOVLW	7
$0B5C	$6E39	    			MOVWF	FARG_solve+0, 0
$0B5E	$0E00	    			MOVLW	0
$0B60	$6E3A	    			MOVWF	FARG_solve+1, 0
$0B62	$EC4D	F004			CALL	_solve
;eeprom_8.c,90 :: 			} else if (var2.f2 == 0) {
$0B66	$D019	    			BRA	L_main_13
$0B68	$	L_main_12:
$0B68	$6A01	    			CLRF	STACK_1, 0
$0B6A	$B438	    			BTFSC	main_var2_L0, 2, 0
$0B6C	$2A01	    			INCF	STACK_1, 1, 0
$0B6E	$5001	    			MOVF	STACK_1, 0, 0
$0B70	$0A00	    			XORLW	0
$0B72	$E107	    			BNZ	L_main_14
;eeprom_8.c,91 :: 			solve(4);
$0B74	$0E04	    			MOVLW	4
$0B76	$6E39	    			MOVWF	FARG_solve+0, 0
$0B78	$0E00	    			MOVLW	0
$0B7A	$6E3A	    			MOVWF	FARG_solve+1, 0
$0B7C	$EC4D	F004			CALL	_solve
;eeprom_8.c,93 :: 			} else if (var2.f3 == 0) {
$0B80	$D00C	    			BRA	L_main_15
$0B82	$	L_main_14:
$0B82	$6A01	    			CLRF	STACK_1, 0
$0B84	$B638	    			BTFSC	main_var2_L0, 3, 0
$0B86	$2A01	    			INCF	STACK_1, 1, 0
$0B88	$5001	    			MOVF	STACK_1, 0, 0
$0B8A	$0A00	    			XORLW	0
$0B8C	$E106	    			BNZ	L_main_16
;eeprom_8.c,94 :: 			solve(1);
$0B8E	$0E01	    			MOVLW	1
$0B90	$6E39	    			MOVWF	FARG_solve+0, 0
$0B92	$0E00	    			MOVLW	0
$0B94	$6E3A	    			MOVWF	FARG_solve+1, 0
$0B96	$EC4D	F004			CALL	_solve
;eeprom_8.c,96 :: 			}
$0B9A	$	L_main_16:
$0B9A	$	L_main_15:
$0B9A	$	L_main_13:
$0B9A	$	L_main_11:
;eeprom_8.c,98 :: 			portb.rb1 = 0;
$0B9A	$9281	    			BCF	PORTB, 1, 0
;eeprom_8.c,99 :: 			var2 = portd;
$0B9C	$CF83	F038			MOVFF	PORTD, main_var2_L0
;eeprom_8.c,101 :: 			if (var2.f0 == 0) {
$0BA0	$0E01	    			MOVLW	1
$0BA2	$1438	    			ANDWF	main_var2_L0, 0, 0
$0BA4	$6E01	    			MOVWF	STACK_1, 0
$0BA6	$5001	    			MOVF	STACK_1, 0, 0
$0BA8	$0A00	    			XORLW	0
$0BAA	$E105	    			BNZ	L_main_17
;eeprom_8.c,102 :: 			solve(0);
$0BAC	$6A39	    			CLRF	FARG_solve+0, 0
$0BAE	$6A3A	    			CLRF	FARG_solve+1, 0
$0BB0	$EC4D	F004			CALL	_solve
;eeprom_8.c,103 :: 			} else if (var2.f1 == 0) {
$0BB4	$D026	    			BRA	L_main_18
$0BB6	$	L_main_17:
$0BB6	$6A01	    			CLRF	STACK_1, 0
$0BB8	$B238	    			BTFSC	main_var2_L0, 1, 0
$0BBA	$2A01	    			INCF	STACK_1, 1, 0
$0BBC	$5001	    			MOVF	STACK_1, 0, 0
$0BBE	$0A00	    			XORLW	0
$0BC0	$E107	    			BNZ	L_main_19
;eeprom_8.c,104 :: 			solve(8);
$0BC2	$0E08	    			MOVLW	8
$0BC4	$6E39	    			MOVWF	FARG_solve+0, 0
$0BC6	$0E00	    			MOVLW	0
$0BC8	$6E3A	    			MOVWF	FARG_solve+1, 0
$0BCA	$EC4D	F004			CALL	_solve
;eeprom_8.c,105 :: 			} else if (var2.f2 == 0) {
$0BCE	$D019	    			BRA	L_main_20
$0BD0	$	L_main_19:
$0BD0	$6A01	    			CLRF	STACK_1, 0
$0BD2	$B438	    			BTFSC	main_var2_L0, 2, 0
$0BD4	$2A01	    			INCF	STACK_1, 1, 0
$0BD6	$5001	    			MOVF	STACK_1, 0, 0
$0BD8	$0A00	    			XORLW	0
$0BDA	$E107	    			BNZ	L_main_21
;eeprom_8.c,106 :: 			solve(5);
$0BDC	$0E05	    			MOVLW	5
$0BDE	$6E39	    			MOVWF	FARG_solve+0, 0
$0BE0	$0E00	    			MOVLW	0
$0BE2	$6E3A	    			MOVWF	FARG_solve+1, 0
$0BE4	$EC4D	F004			CALL	_solve
;eeprom_8.c,107 :: 			} else if (var2.f3 == 0) {
$0BE8	$D00C	    			BRA	L_main_22
$0BEA	$	L_main_21:
$0BEA	$6A01	    			CLRF	STACK_1, 0
$0BEC	$B638	    			BTFSC	main_var2_L0, 3, 0
$0BEE	$2A01	    			INCF	STACK_1, 1, 0
$0BF0	$5001	    			MOVF	STACK_1, 0, 0
$0BF2	$0A00	    			XORLW	0
$0BF4	$E106	    			BNZ	L_main_23
;eeprom_8.c,108 :: 			solve(2);
$0BF6	$0E02	    			MOVLW	2
$0BF8	$6E39	    			MOVWF	FARG_solve+0, 0
$0BFA	$0E00	    			MOVLW	0
$0BFC	$6E3A	    			MOVWF	FARG_solve+1, 0
$0BFE	$EC4D	F004			CALL	_solve
;eeprom_8.c,109 :: 			}
$0C02	$	L_main_23:
$0C02	$	L_main_22:
$0C02	$	L_main_20:
$0C02	$	L_main_18:
;eeprom_8.c,111 :: 			portb.rb1 = 1;
$0C02	$8281	    			BSF	PORTB, 1, 0
;eeprom_8.c,112 :: 			portb.rb2 = 0;
$0C04	$9481	    			BCF	PORTB, 2, 0
;eeprom_8.c,113 :: 			var2 = portd;
$0C06	$CF83	F038			MOVFF	PORTD, main_var2_L0
;eeprom_8.c,115 :: 			if (var2.f0 == 0) {
$0C0A	$0E01	    			MOVLW	1
$0C0C	$1438	    			ANDWF	main_var2_L0, 0, 0
$0C0E	$6E01	    			MOVWF	STACK_1, 0
$0C10	$5001	    			MOVF	STACK_1, 0, 0
$0C12	$0A00	    			XORLW	0
$0C14	$E026	    			BZ	L_main_25
;eeprom_8.c,117 :: 			} else if (var2.f1 == 0) {
$0C16	$	L_main_24:
$0C16	$6A01	    			CLRF	STACK_1, 0
$0C18	$B238	    			BTFSC	main_var2_L0, 1, 0
$0C1A	$2A01	    			INCF	STACK_1, 1, 0
$0C1C	$5001	    			MOVF	STACK_1, 0, 0
$0C1E	$0A00	    			XORLW	0
$0C20	$E107	    			BNZ	L_main_26
;eeprom_8.c,118 :: 			solve(9);
$0C22	$0E09	    			MOVLW	9
$0C24	$6E39	    			MOVWF	FARG_solve+0, 0
$0C26	$0E00	    			MOVLW	0
$0C28	$6E3A	    			MOVWF	FARG_solve+1, 0
$0C2A	$EC4D	F004			CALL	_solve
;eeprom_8.c,119 :: 			} else if (var2.f2 == 0) {
$0C2E	$D019	    			BRA	L_main_27
$0C30	$	L_main_26:
$0C30	$6A01	    			CLRF	STACK_1, 0
$0C32	$B438	    			BTFSC	main_var2_L0, 2, 0
$0C34	$2A01	    			INCF	STACK_1, 1, 0
$0C36	$5001	    			MOVF	STACK_1, 0, 0
$0C38	$0A00	    			XORLW	0
$0C3A	$E107	    			BNZ	L_main_28
;eeprom_8.c,120 :: 			solve(6);
$0C3C	$0E06	    			MOVLW	6
$0C3E	$6E39	    			MOVWF	FARG_solve+0, 0
$0C40	$0E00	    			MOVLW	0
$0C42	$6E3A	    			MOVWF	FARG_solve+1, 0
$0C44	$EC4D	F004			CALL	_solve
;eeprom_8.c,121 :: 			} else if (var2.f3 == 0) {
$0C48	$D00C	    			BRA	L_main_29
$0C4A	$	L_main_28:
$0C4A	$6A01	    			CLRF	STACK_1, 0
$0C4C	$B638	    			BTFSC	main_var2_L0, 3, 0
$0C4E	$2A01	    			INCF	STACK_1, 1, 0
$0C50	$5001	    			MOVF	STACK_1, 0, 0
$0C52	$0A00	    			XORLW	0
$0C54	$E106	    			BNZ	L_main_30
;eeprom_8.c,122 :: 			solve(3);
$0C56	$0E03	    			MOVLW	3
$0C58	$6E39	    			MOVWF	FARG_solve+0, 0
$0C5A	$0E00	    			MOVLW	0
$0C5C	$6E3A	    			MOVWF	FARG_solve+1, 0
$0C5E	$EC4D	F004			CALL	_solve
;eeprom_8.c,123 :: 			}
$0C62	$	L_main_30:
$0C62	$	L_main_29:
$0C62	$	L_main_27:
$0C62	$	L_main_25:
;eeprom_8.c,124 :: 			} while(1);
$0C62	$D765	    			BRA	L_main_8
;eeprom_8.c,125 :: 			}
$0C64	$D7FF	    			BRA	$
