;  ASM code generated by mikroVirtualMachine for PIC - V. 7.0.0.3
;  Date/Time: 07/06/2017 08:52:43
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF24	F002			GOTO	_main
$0008	$	_Delay_1us:
$0008	$0000	    			NOP
$000A	$0000	    			NOP
$000C	$0012	    			RETURN
$000E	$	_Delay_5500us:
$000E	$0E0F	    			MOVLW	15
$0010	$6E0B	    			MOVWF	STACK_11, 0
$0012	$0EFF	    			MOVLW	255
$0014	$6E0A	    			MOVWF	STACK_10, 0
$0016	$2E0B	    			DECFSZ	STACK_11, F, 0
$0018	$D001	    			BRA	$+2
$001A	$D003	    			BRA	$+4
$001C	$2E0A	    			DECFSZ	STACK_10, F, 0
$001E	$D7FE	    			BRA	$-1
$0020	$D7FA	    			BRA	$-5
$0022	$0E3E	    			MOVLW	62
$0024	$6E0A	    			MOVWF	STACK_10, 0
$0026	$2E0A	    			DECFSZ	STACK_10, F, 0
$0028	$D7FE	    			BRA	$-1
$002A	$0000	    			NOP
$002C	$0012	    			RETURN
$002E	$	_Delay_50us:
$002E	$0E21	    			MOVLW	33
$0030	$6E0A	    			MOVWF	STACK_10, 0
$0032	$2E0A	    			DECFSZ	STACK_10, F, 0
$0034	$D7FE	    			BRA	$-1
$0036	$0012	    			RETURN
$0038	$	_Lcd8_Cmd:
$0038	$C015	FFE9			MOVFF	Lcd8bit_main_global_dataAddress, FSR0L
$003C	$C016	FFEA			MOVFF	Lcd8bit_main_global_dataAddress+1, FSR0H
$0040	$C017	FFE1			MOVFF	Lcd8bit_main_global_ctrlAddress, FSR1L
$0044	$C018	FFE2			MOVFF	Lcd8bit_main_global_ctrlAddress+1, FSR1H
$0048	$6AEF	    			CLRF	INDF0, 0
$004A	$5254	    			MOVF	FARG_Lcd8_Cmd+0, 1, 0
$004C	$E000	    			BZ	L_Lcd8_Cmd_0
$004E	$	L_Lcd8_Cmd_0:
$004E	$BE54	    			BTFSC	FARG_Lcd8_Cmd+0, 7, 0
$0050	$8EEF	    			BSF	INDF0, __LCD8_DB7, 0
$0052	$BC54	    			BTFSC	FARG_Lcd8_Cmd+0, 6, 0
$0054	$8CEF	    			BSF	INDF0, __LCD8_DB6, 0
$0056	$BA54	    			BTFSC	FARG_Lcd8_Cmd+0, 5, 0
$0058	$8AEF	    			BSF	INDF0, __LCD8_DB5, 0
$005A	$B854	    			BTFSC	FARG_Lcd8_Cmd+0, 4, 0
$005C	$88EF	    			BSF	INDF0, __LCD8_DB4, 0
$005E	$B654	    			BTFSC	FARG_Lcd8_Cmd+0, 3, 0
$0060	$86EF	    			BSF	INDF0, __LCD8_DB3, 0
$0062	$B454	    			BTFSC	FARG_Lcd8_Cmd+0, 2, 0
$0064	$84EF	    			BSF	INDF0, __LCD8_DB2, 0
$0066	$B254	    			BTFSC	FARG_Lcd8_Cmd+0, 1, 0
$0068	$82EF	    			BSF	INDF0, __LCD8_DB1, 0
$006A	$B054	    			BTFSC	FARG_Lcd8_Cmd+0, 0, 0
$006C	$80EF	    			BSF	INDF0, __LCD8_DB0, 0
$006E	$5019	    			MOVF	Lcd8bit_main_global_cmd, 0, 0
$0070	$0A01	    			XORLW	1
$0072	$E103	    			BNZ	L_Lcd8_Cmd_1
$0074	$94E7	    			BCF	INDF1, __LCD8_RS, 0
$0076	$EF3E	F000			GOTO	L_Lcd8_Cmd_2
$007A	$	L_Lcd8_Cmd_1:
$007A	$84E7	    			BSF	INDF1, __LCD8_RS, 0
$007C	$	L_Lcd8_Cmd_2:
$007C	$82E7	    			BSF	INDF1, __LCD8_ENABLE, 0
$007E	$EC04	F000			CALL	_Delay_1us
$0082	$92E7	    			BCF	INDF1, __LCD8_ENABLE, 0
$0084	$5019	    			MOVF	Lcd8bit_main_global_cmd, 0, 0
$0086	$0A01	    			XORLW	1
$0088	$E103	    			BNZ	L_Lcd8_Cmd_3
$008A	$EC07	F000			CALL	_Delay_5500us
$008E	$D002	    			BRA	L_Lcd8_Cmd_4
$0090	$	L_Lcd8_Cmd_3:
$0090	$EC17	F000			CALL	_Delay_50us
$0094	$	L_Lcd8_Cmd_4:
$0094	$0012	    			RETURN
$0096	$	_Lcd8_Init:
$0096	$EC07	F000			CALL	_Delay_5500us
$009A	$EC07	F000			CALL	_Delay_5500us
$009E	$EC07	F000			CALL	_Delay_5500us
$00A2	$C051	F015			MOVFF	FARG_Lcd8_Init+2, Lcd8bit_main_global_dataAddress
$00A6	$C052	F016			MOVFF	FARG_Lcd8_Init+3, Lcd8bit_main_global_dataAddress+1
$00AA	$C04F	F017			MOVFF	FARG_Lcd8_Init+0, Lcd8bit_main_global_ctrlAddress
$00AE	$C050	F018			MOVFF	FARG_Lcd8_Init+1, Lcd8bit_main_global_ctrlAddress+1
$00B2	$C04F	FFE9			MOVFF	FARG_Lcd8_Init+0, FSR0L
$00B6	$C050	FFEA			MOVFF	FARG_Lcd8_Init+1, FSR0H
$00BA	$90EF	    			BCF	INDF0, __LCD8_RW, 0
$00BC	$C051	FFE1			MOVFF	FARG_Lcd8_Init+2, FSR1L
$00C0	$C052	FFE2			MOVFF	FARG_Lcd8_Init+3, FSR1H
$00C4	$6AE6	    			CLRF	POSTINC1, 0
$00C6	$0E11	    			MOVLW	17
$00C8	$24E1	    			ADDWF	FSR1L, 0, 0
$00CA	$6E00	    			MOVWF	STACK_0, 0
$00CC	$C000	FFE1			MOVFF	STACK_0, FSR1L
$00D0	$6AE7	    			CLRF	INDF1, 0
$00D2	$0E12	    			MOVLW	18
$00D4	$5C00	    			SUBWF	STACK_0, 0, 0
$00D6	$6EE1	    			MOVWF	FSR1L, 0
$00D8	$0E12	    			MOVLW	18
$00DA	$26E9	    			ADDWF	FSR0L, 1, 0
$00DC	$92EF	    			BCF	INDF0, __LCD8_ENABLE, 0
$00DE	$94EF	    			BCF	INDF0, __LCD8_RS, 0
$00E0	$90EF	    			BCF	INDF0, __LCD8_RW, 0
$00E2	$0E12	    			MOVLW	18
$00E4	$5EE9	    			SUBWF	FSR0L, 1, 0
$00E6	$94EF	    			BCF	INDF0, __LCD8_RS, 0
$00E8	$92EF	    			BCF	INDF0, __LCD8_ENABLE, 0
$00EA	$90EF	    			BCF	INDF0, __LCD8_RW, 0
$00EC	$0E30	    			MOVLW	48
$00EE	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$00F0	$EC1C	F000			CALL	_Lcd8_Cmd
$00F4	$0E30	    			MOVLW	48
$00F6	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$00F8	$EC1C	F000			CALL	_Lcd8_Cmd
$00FC	$0E30	    			MOVLW	48
$00FE	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0100	$EC1C	F000			CALL	_Lcd8_Cmd
$0104	$0E38	    			MOVLW	56
$0106	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0108	$EC1C	F000			CALL	_Lcd8_Cmd
$010C	$0E08	    			MOVLW	8
$010E	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0110	$EC1C	F000			CALL	_Lcd8_Cmd
$0114	$0E01	    			MOVLW	1
$0116	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0118	$EC1C	F000			CALL	_Lcd8_Cmd
$011C	$0E06	    			MOVLW	6
$011E	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0120	$EC1C	F000			CALL	_Lcd8_Cmd
$0124	$0E0C	    			MOVLW	12
$0126	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0128	$EC1C	F000			CALL	_Lcd8_Cmd
$012C	$0E01	    			MOVLW	1
$012E	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$0130	$0012	    			RETURN
$0132	$	_LCD8_Out:
$0132	$D00F	    			BRA	L_LCD8_Out_12
$0134	$	L_LCD8_Out_14:
$0134	$0E80	    			MOVLW	128
$0136	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$0138	$D019	    			BRA	L_LCD8_Out_13
$013A	$	L_LCD8_Out_15:
$013A	$0EC0	    			MOVLW	192
$013C	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$013E	$D016	    			BRA	L_LCD8_Out_13
$0140	$	L_LCD8_Out_16:
$0140	$0E94	    			MOVLW	148
$0142	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$0144	$D013	    			BRA	L_LCD8_Out_13
$0146	$	L_LCD8_Out_17:
$0146	$0ED4	    			MOVLW	212
$0148	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$014A	$D010	    			BRA	L_LCD8_Out_13
$014C	$	L_LCD8_Out_18:
$014C	$0E80	    			MOVLW	128
$014E	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$0150	$D00D	    			BRA	L_LCD8_Out_13
$0152	$	L_LCD8_Out_12:
$0152	$504F	    			MOVF	FARG_LCD8_Out+0, 0, 0
$0154	$0A01	    			XORLW	1
$0156	$E0EE	    			BZ	L_LCD8_Out_14
$0158	$504F	    			MOVF	FARG_LCD8_Out+0, 0, 0
$015A	$0A02	    			XORLW	2
$015C	$E0EE	    			BZ	L_LCD8_Out_15
$015E	$504F	    			MOVF	FARG_LCD8_Out+0, 0, 0
$0160	$0A03	    			XORLW	3
$0162	$E0EE	    			BZ	L_LCD8_Out_16
$0164	$504F	    			MOVF	FARG_LCD8_Out+0, 0, 0
$0166	$0A04	    			XORLW	4
$0168	$E0EE	    			BZ	L_LCD8_Out_17
$016A	$D7F0	    			BRA	L_LCD8_Out_18
$016C	$	L_LCD8_Out_13:
$016C	$0450	    			DECF	FARG_LCD8_Out+1, 0, 0
$016E	$6E00	    			MOVWF	STACK_0, 0
$0170	$504F	    			MOVF	FARG_LCD8_Out+0, 0, 0
$0172	$2600	    			ADDWF	STACK_0, 1, 0
$0174	$C000	F04F			MOVFF	STACK_0, FARG_LCD8_Out+0
$0178	$0E01	    			MOVLW	1
$017A	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$017C	$C000	F054			MOVFF	STACK_0, FARG_Lcd8_Cmd+0
$0180	$EC1C	F000			CALL	_Lcd8_Cmd
$0184	$6A19	    			CLRF	Lcd8bit_main_global_cmd, 0
$0186	$6A53	    			CLRF	LCD8_Out_i_L0, 0
$0188	$	L_LCD8_Out_19:
$0188	$5053	    			MOVF	LCD8_Out_i_L0, 0, 0
$018A	$2451	    			ADDWF	FARG_LCD8_Out+2, 0, 0
$018C	$6EE9	    			MOVWF	FSR0L, 0
$018E	$0E00	    			MOVLW	0
$0190	$2052	    			ADDWFC	FARG_LCD8_Out+3, 0, 0
$0192	$6EEA	    			MOVWF	FSR0L+1, 0
$0194	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$0198	$5200	    			MOVF	STACK_0, 1, 0
$019A	$E00C	    			BZ	L_LCD8_Out_20
$019C	$5053	    			MOVF	LCD8_Out_i_L0, 0, 0
$019E	$2451	    			ADDWF	FARG_LCD8_Out+2, 0, 0
$01A0	$6EE9	    			MOVWF	FSR0L, 0
$01A2	$0E00	    			MOVLW	0
$01A4	$2052	    			ADDWFC	FARG_LCD8_Out+3, 0, 0
$01A6	$6EEA	    			MOVWF	FSR0L+1, 0
$01A8	$CFEE	F054			MOVFF	POSTINC0, FARG_Lcd8_Cmd+0
$01AC	$EC1C	F000			CALL	_Lcd8_Cmd
$01B0	$2A53	    			INCF	LCD8_Out_i_L0, 1, 0
$01B2	$D7EA	    			BRA	L_LCD8_Out_19
$01B4	$	L_LCD8_Out_20:
$01B4	$0E01	    			MOVLW	1
$01B6	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$01B8	$0012	    			RETURN
$01BA	$	_LCD8_Out_CP:
$01BA	$6A19	    			CLRF	Lcd8bit_main_global_cmd, 0
$01BC	$6A51	    			CLRF	LCD8_Out_CP_i_L0, 0
$01BE	$	L_LCD8_Out_CP_21:
$01BE	$5051	    			MOVF	LCD8_Out_CP_i_L0, 0, 0
$01C0	$244F	    			ADDWF	FARG_LCD8_Out_CP+0, 0, 0
$01C2	$6EE9	    			MOVWF	FSR0L, 0
$01C4	$0E00	    			MOVLW	0
$01C6	$2050	    			ADDWFC	FARG_LCD8_Out_CP+1, 0, 0
$01C8	$6EEA	    			MOVWF	FSR0L+1, 0
$01CA	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$01CE	$5200	    			MOVF	STACK_0, 1, 0
$01D0	$E00C	    			BZ	L_LCD8_Out_CP_22
$01D2	$5051	    			MOVF	LCD8_Out_CP_i_L0, 0, 0
$01D4	$244F	    			ADDWF	FARG_LCD8_Out_CP+0, 0, 0
$01D6	$6EE9	    			MOVWF	FSR0L, 0
$01D8	$0E00	    			MOVLW	0
$01DA	$2050	    			ADDWFC	FARG_LCD8_Out_CP+1, 0, 0
$01DC	$6EEA	    			MOVWF	FSR0L+1, 0
$01DE	$CFEE	F054			MOVFF	POSTINC0, FARG_Lcd8_Cmd+0
$01E2	$EC1C	F000			CALL	_Lcd8_Cmd
$01E6	$2A51	    			INCF	LCD8_Out_CP_i_L0, 1, 0
$01E8	$D7EA	    			BRA	L_LCD8_Out_CP_21
$01EA	$	L_LCD8_Out_CP_22:
$01EA	$0E01	    			MOVLW	1
$01EC	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$01EE	$0012	    			RETURN
$01F0	$	_Div_16x16_S_L:
$01F0	$0100	    			MOVLB	0
$01F2	$3401	    			RLCF	STACK_1, W, 0
$01F4	$3608	    			RLCF	STACK_8, F, 0
$01F6	$3609	    			RLCF	STACK_9, F, 0
$01F8	$5004	    			MOVF	STACK_4, W, 0
$01FA	$5E08	    			SUBWF	STACK_8, F, 0
$01FC	$5005	    			MOVF	STACK_5, W, 0
$01FE	$A0D8	    			BTFSS	STATUS, C, 0
$0200	$3C05	    			INCFSZ	STACK_5, W, 0
$0202	$5E09	    			SUBWF	STACK_9, F, 0
$0204	$3600	    			RLCF	STACK_0, F, 0
$0206	$3601	    			RLCF	STACK_1, F, 0
$0208	$0E0F	    			MOVLW	15
$020A	$6E0C	    			MOVWF	STACK_12, 0
$020C	$3401	    			RLCF	STACK_1, W, 0
$020E	$3608	    			RLCF	STACK_8, F, 0
$0210	$3609	    			RLCF	STACK_9, F, 0
$0212	$5004	    			MOVF	STACK_4, W, 0
$0214	$A000	    			BTFSS	STACK_0, 0, 0
$0216	$EF14	F001			GOTO	$+7
$021A	$5E08	    			SUBWF	STACK_8, F, 0
$021C	$5005	    			MOVF	STACK_5, W, 0
$021E	$A0D8	    			BTFSS	STATUS, C, 0
$0220	$3C05	    			INCFSZ	STACK_5, W, 0
$0222	$5E09	    			SUBWF	STACK_9, F, 0
$0224	$EF19	F001			GOTO	$+6
$0228	$2608	    			ADDWF	STACK_8, F, 0
$022A	$5005	    			MOVF	STACK_5, W, 0
$022C	$B0D8	    			BTFSC	STATUS, C, 0
$022E	$3C05	    			INCFSZ	STACK_5, W, 0
$0230	$2609	    			ADDWF	STACK_9, F, 0
$0232	$3600	    			RLCF	STACK_0, F, 0
$0234	$3601	    			RLCF	STACK_1, F, 0
$0236	$2E0C	    			DECFSZ	STACK_12, F, 0
$0238	$EF06	F001			GOTO	$-20
$023C	$B000	    			BTFSC	STACK_0, 0, 0
$023E	$EF27	F001			GOTO	$+7
$0242	$5004	    			MOVF	STACK_4, W, 0
$0244	$2608	    			ADDWF	STACK_8, F, 0
$0246	$5005	    			MOVF	STACK_5, W, 0
$0248	$B0D8	    			BTFSC	STATUS, C, 0
$024A	$3C05	    			INCFSZ	STACK_5, W, 0
$024C	$2609	    			ADDWF	STACK_9, F, 0
$024E	$0000	    			NOP
$0250	$0012	    			RETURN
$0252	$	_init_lcd:
;LCDMatricial.c,1 :: 			void init_lcd(void){
;LCDMatricial.c,2 :: 			lcd8_config(&porte,&portd,2,1,0,7,6,5,4,3,2,1,0);
$0252	$0E84	    			MOVLW	PORTE
$0254	$6E4F	    			MOVWF	FARG_Lcd8_Init+0, 0
$0256	$0E0F	    			MOVLW	@PORTE
$0258	$6E50	    			MOVWF	FARG_Lcd8_Init+1, 0
$025A	$0E83	    			MOVLW	PORTD
$025C	$6E51	    			MOVWF	FARG_Lcd8_Init+2, 0
$025E	$0E0F	    			MOVLW	@PORTD
$0260	$6E52	    			MOVWF	FARG_Lcd8_Init+3, 0
$0262	$EC4B	F000			CALL	_Lcd8_Init
;LCDMatricial.c,3 :: 			lcd8_cmd(lcd_clear);
$0266	$0E01	    			MOVLW	1
$0268	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$026A	$EC1C	F000			CALL	_Lcd8_Cmd
;LCDMatricial.c,4 :: 			lcd8_cmd(lcd_cursor_off);
$026E	$0E0C	    			MOVLW	12
$0270	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0272	$EC1C	F000			CALL	_Lcd8_Cmd
;LCDMatricial.c,5 :: 			delay_ms(100);
$0276	$0E02	    			MOVLW	2
$0278	$6E0C	    			MOVWF	STACK_12, 0
$027A	$0EFF	    			MOVLW	255
$027C	$6E0B	    			MOVWF	STACK_11, 0
$027E	$0EFF	    			MOVLW	255
$0280	$6E0A	    			MOVWF	STACK_10, 0
$0282	$2E0C	    			DECFSZ	STACK_12, F, 0
$0284	$D001	    			BRA	$+2
$0286	$D007	    			BRA	$+8
$0288	$2E0B	    			DECFSZ	STACK_11, F, 0
$028A	$D001	    			BRA	$+2
$028C	$D003	    			BRA	$+4
$028E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0290	$D7FE	    			BRA	$-1
$0292	$D7FA	    			BRA	$-5
$0294	$D7F6	    			BRA	$-9
$0296	$0E06	    			MOVLW	6
$0298	$6E0B	    			MOVWF	STACK_11, 0
$029A	$0EFF	    			MOVLW	255
$029C	$6E0A	    			MOVWF	STACK_10, 0
$029E	$2E0B	    			DECFSZ	STACK_11, F, 0
$02A0	$D001	    			BRA	$+2
$02A2	$D003	    			BRA	$+4
$02A4	$2E0A	    			DECFSZ	STACK_10, F, 0
$02A6	$D7FE	    			BRA	$-1
$02A8	$D7FA	    			BRA	$-5
$02AA	$0E0A	    			MOVLW	10
$02AC	$6E0A	    			MOVWF	STACK_10, 0
$02AE	$2E0A	    			DECFSZ	STACK_10, F, 0
$02B0	$D7FE	    			BRA	$-1
$02B2	$0000	    			NOP
;LCDMatricial.c,6 :: 			}
$02B4	$0012	    			RETURN
$02B6	$	_lcd:
$02B6	$0E53	    			MOVLW	83
$02B8	$6E47	    			MOVWF	lstr1_LCDMatricial+0, 0
$02BA	$0E65	    			MOVLW	101
$02BC	$6E48	    			MOVWF	lstr1_LCDMatricial+1, 0
$02BE	$0E67	    			MOVLW	103
$02C0	$6E49	    			MOVWF	lstr1_LCDMatricial+2, 0
$02C2	$0E72	    			MOVLW	114
$02C4	$6E4A	    			MOVWF	lstr1_LCDMatricial+3, 0
$02C6	$0E65	    			MOVLW	101
$02C8	$6E4B	    			MOVWF	lstr1_LCDMatricial+4, 0
$02CA	$0E64	    			MOVLW	100
$02CC	$6E4C	    			MOVWF	lstr1_LCDMatricial+5, 0
$02CE	$0E6F	    			MOVLW	111
$02D0	$6E4D	    			MOVWF	lstr1_LCDMatricial+6, 0
$02D2	$6A4E	    			CLRF	lstr1_LCDMatricial+7, 0
;LCDMatricial.c,7 :: 			void lcd(char str[5]) {
;LCDMatricial.c,8 :: 			trisd = 0;
$02D4	$6A95	    			CLRF	TRISD, 0
;LCDMatricial.c,9 :: 			lcd8_cmd(lcd_clear);
$02D6	$0E01	    			MOVLW	1
$02D8	$6E54	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$02DA	$EC1C	F000			CALL	_Lcd8_Cmd
;LCDMatricial.c,10 :: 			lcd8_out(1, 1, "Segredo");
$02DE	$0E01	    			MOVLW	1
$02E0	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$02E2	$0E01	    			MOVLW	1
$02E4	$6E50	    			MOVWF	FARG_LCD8_Out+1, 0
$02E6	$0E47	    			MOVLW	lstr1_LCDMatricial
$02E8	$6E51	    			MOVWF	FARG_LCD8_Out+2, 0
$02EA	$0E00	    			MOVLW	@lstr1_LCDMatricial
$02EC	$6E52	    			MOVWF	FARG_LCD8_Out+3, 0
$02EE	$EC99	F000			CALL	_LCD8_Out
;LCDMatricial.c,11 :: 			lcd8_out(2, 0, ' ');
$02F2	$0E02	    			MOVLW	2
$02F4	$6E4F	    			MOVWF	FARG_LCD8_Out+0, 0
$02F6	$6A50	    			CLRF	FARG_LCD8_Out+1, 0
$02F8	$0E20	    			MOVLW	32
$02FA	$6E51	    			MOVWF	FARG_LCD8_Out+2, 0
$02FC	$0E00	    			MOVLW	0
$02FE	$6E52	    			MOVWF	FARG_LCD8_Out+3, 0
$0300	$EC99	F000			CALL	_LCD8_Out
;LCDMatricial.c,12 :: 			lcd8_out_cp(str);
$0304	$C045	F04F			MOVFF	FARG_lcd+0, FARG_LCD8_Out_CP+0
$0308	$C046	F050			MOVFF	FARG_lcd+1, FARG_LCD8_Out_CP+1
$030C	$ECDD	F000			CALL	_LCD8_Out_CP
;LCDMatricial.c,13 :: 			trisd = 255;
$0310	$0EFF	    			MOVLW	255
$0312	$6E95	    			MOVWF	TRISD, 0
;LCDMatricial.c,14 :: 			}
$0314	$0012	    			RETURN
$0316	$	_Mul_16x16_S:
$0316	$0100	    			MOVLB	0
$0318	$5000	    			MOVF	STACK_0, W, 0
$031A	$0204	    			MULWF	STACK_4, 0
$031C	$CFF4	F009			MOVFF	PRODH, STACK_9
$0320	$CFF3	F008			MOVFF	PRODL, STACK_8
$0324	$5001	    			MOVF	STACK_1, W, 0
$0326	$0205	    			MULWF	STACK_5, 0
$0328	$CFF4	F00B			MOVFF	PRODH, STACK_11
$032C	$CFF3	F00A			MOVFF	PRODL, STACK_10
$0330	$5000	    			MOVF	STACK_0, W, 0
$0332	$0205	    			MULWF	STACK_5, 0
$0334	$50F3	    			MOVF	PRODL, W, 0
$0336	$2609	    			ADDWF	STACK_9, F, 0
$0338	$50F4	    			MOVF	PRODH, W, 0
$033A	$220A	    			ADDWFC	STACK_10, F, 0
$033C	$6AE8	    			CLRF	WREG, 0
$033E	$220B	    			ADDWFC	STACK_11, F, 0
$0340	$5001	    			MOVF	STACK_1, W, 0
$0342	$0204	    			MULWF	STACK_4, 0
$0344	$50F3	    			MOVF	PRODL, W, 0
$0346	$2609	    			ADDWF	STACK_9, F, 0
$0348	$50F4	    			MOVF	PRODH, W, 0
$034A	$220A	    			ADDWFC	STACK_10, F, 0
$034C	$6AE8	    			CLRF	WREG, 0
$034E	$220B	    			ADDWFC	STACK_11, F, 0
$0350	$AE05	    			BTFSS	STACK_5, 7, 0
$0352	$EFAF	F001			GOTO	$+5
$0356	$5000	    			MOVF	STACK_0, W, 0
$0358	$5C0A	    			SUBWF	STACK_10, W, 0
$035A	$5001	    			MOVF	STACK_1, W, 0
$035C	$580B	    			SUBWFB	STACK_11, W, 0
$035E	$AE01	    			BTFSS	STACK_1, 7, 0
$0360	$EFB6	F001			GOTO	$+5
$0364	$5004	    			MOVF	STACK_4, W, 0
$0366	$5C0A	    			SUBWF	STACK_10, W, 0
$0368	$5005	    			MOVF	STACK_5, W, 0
$036A	$580B	    			SUBWFB	STACK_11, W, 0
$036C	$C008	F000			MOVFF	STACK_8, STACK_0
$0370	$C009	F001			MOVFF	STACK_9, STACK_1
$0374	$C00A	F002			MOVFF	STACK_10, STACK_2
$0378	$C00B	F003			MOVFF	STACK_11, STACK_3
$037C	$0012	    			RETURN
$037E	$	_Div_16x16_S:
$037E	$0100	    			MOVLB	0
$0380	$6A0D	    			CLRF	STACK_13, 0
$0382	$6A09	    			CLRF	STACK_9, 0
$0384	$6A08	    			CLRF	STACK_8, 0
$0386	$5001	    			MOVF	STACK_1, W, 0
$0388	$1000	    			IORWF	STACK_0, W, 0
$038A	$B4D8	    			BTFSC	STATUS, Z, 0
$038C	$0C00	    			RETLW	0
$038E	$5001	    			MOVF	STACK_1, W, 0
$0390	$1805	    			XORWF	STACK_5, W, 0
$0392	$6E0A	    			MOVWF	STACK_10, 0
$0394	$BE0A	    			BTFSC	STACK_10, 7, 0
$0396	$1E0D	    			COMF	STACK_13, F, 0
$0398	$6A0B	    			CLRF	STACK_11, 0
$039A	$AE05	    			BTFSS	STACK_5, 7, 0
$039C	$EFD5	F001			GOTO	$+6
$03A0	$1E04	    			COMF	STACK_4, F, 0
$03A2	$1E05	    			COMF	STACK_5, F, 0
$03A4	$2A04	    			INCF	STACK_4, F, 0
$03A6	$B4D8	    			BTFSC	STATUS, Z, 0
$03A8	$2A05	    			INCF	STACK_5, F, 0
$03AA	$AE01	    			BTFSS	STACK_1, 7, 0
$03AC	$EFDD	F001			GOTO	$+6
$03B0	$1E00	    			COMF	STACK_0, F, 0
$03B2	$1E01	    			COMF	STACK_1, F, 0
$03B4	$2A00	    			INCF	STACK_0, F, 0
$03B6	$B4D8	    			BTFSC	STATUS, Z, 0
$03B8	$2A01	    			INCF	STACK_1, F, 0
$03BA	$5001	    			MOVF	STACK_1, W, 0
$03BC	$1005	    			IORWF	STACK_5, W, 0
$03BE	$6E0A	    			MOVWF	STACK_10, 0
$03C0	$BE0A	    			BTFSC	STACK_10, 7, 0
$03C2	$EFF5	F001			GOTO	$+17
$03C6	$ECF8	F000			CALL	_Div_16x16_S_L
$03CA	$B00B	    			BTFSC	STACK_11, 0, 0
$03CC	$EF0C	F002			GOTO	$+33
$03D0	$AE0D	    			BTFSS	STACK_13, 7, 0
$03D2	$0C00	    			RETLW	0
$03D4	$1E00	    			COMF	STACK_0, F, 0
$03D6	$1E01	    			COMF	STACK_1, F, 0
$03D8	$2A00	    			INCF	STACK_0, F, 0
$03DA	$B4D8	    			BTFSC	STATUS, Z, 0
$03DC	$2A01	    			INCF	STACK_1, F, 0
$03DE	$1E08	    			COMF	STACK_8, F, 0
$03E0	$1E09	    			COMF	STACK_9, F, 0
$03E2	$2A08	    			INCF	STACK_8, F, 0
$03E4	$B4D8	    			BTFSC	STATUS, Z, 0
$03E6	$2A09	    			INCF	STACK_9, F, 0
$03E8	$0C00	    			RETLW	0
$03EA	$AE05	    			BTFSS	STACK_5, 7, 0
$03EC	$EF07	F002			GOTO	$+14
$03F0	$BE01	    			BTFSC	STACK_1, 7, 0
$03F2	$EF03	F002			GOTO	$+8
$03F6	$5001	    			MOVF	STACK_1, W, 0
$03F8	$6E09	    			MOVWF	STACK_9, 0
$03FA	$5000	    			MOVF	STACK_0, W, 0
$03FC	$6E08	    			MOVWF	STACK_8, 0
$03FE	$6A01	    			CLRF	STACK_1, 0
$0400	$6A00	    			CLRF	STACK_0, 0
$0402	$EFE8	F001			GOTO	$-23
$0406	$6A01	    			CLRF	STACK_1, 0
$0408	$6A00	    			CLRF	STACK_0, 0
$040A	$2A00	    			INCF	STACK_0, F, 0
$040C	$0C00	    			RETLW	0
$040E	$1E01	    			COMF	STACK_1, F, 0
$0410	$1E00	    			COMF	STACK_0, F, 0
$0412	$2A0B	    			INCF	STACK_11, F, 0
$0414	$EFE3	F001			GOTO	$-34
$0418	$2A08	    			INCF	STACK_8, F, 0
$041A	$B4D8	    			BTFSC	STATUS, Z, 0
$041C	$2A09	    			INCF	STACK_9, F, 0
$041E	$5004	    			MOVF	STACK_4, W, 0
$0420	$5C08	    			SUBWF	STACK_8, W, 0
$0422	$A4D8	    			BTFSS	STATUS, Z, 0
$0424	$EFE8	F001			GOTO	$-38
$0428	$5005	    			MOVF	STACK_5, W, 0
$042A	$5C09	    			SUBWF	STACK_9, W, 0
$042C	$A4D8	    			BTFSS	STATUS, Z, 0
$042E	$EFE8	F001			GOTO	$-42
$0432	$6A09	    			CLRF	STACK_9, 0
$0434	$6A08	    			CLRF	STACK_8, 0
$0436	$2A00	    			INCF	STACK_0, F, 0
$0438	$B4D8	    			BTFSC	STATUS, Z, 0
$043A	$2A01	    			INCF	STACK_1, F, 0
$043C	$AE01	    			BTFSS	STACK_1, 7, 0
$043E	$EFE8	F001			GOTO	$-49
$0442	$0000	    			NOP
$0444	$0CFF	    			RETLW	255
$0446	$0012	    			RETURN
$0448	$	_main:
$0448	$0E20	    			MOVLW	32
$044A	$6E1A	    			MOVWF	lstr2_LCDMatricial+0, 0
$044C	$6A1B	    			CLRF	lstr2_LCDMatricial+1, 0
$044E	$0E3C	    			MOVLW	60
$0450	$6E1C	    			MOVWF	lstr3_LCDMatricial+0, 0
$0452	$0E2D	    			MOVLW	45
$0454	$6E1D	    			MOVWF	lstr3_LCDMatricial+1, 0
$0456	$0E2D	    			MOVLW	45
$0458	$6E1E	    			MOVWF	lstr3_LCDMatricial+2, 0
$045A	$6A1F	    			CLRF	lstr3_LCDMatricial+3, 0
$045C	$0E30	    			MOVLW	48
$045E	$6E20	    			MOVWF	lstr4_LCDMatricial+0, 0
$0460	$6A21	    			CLRF	lstr4_LCDMatricial+1, 0
$0462	$0E2D	    			MOVLW	45
$0464	$6E22	    			MOVWF	lstr5_LCDMatricial+0, 0
$0466	$0E2D	    			MOVLW	45
$0468	$6E23	    			MOVWF	lstr5_LCDMatricial+1, 0
$046A	$0E3E	    			MOVLW	62
$046C	$6E24	    			MOVWF	lstr5_LCDMatricial+2, 0
$046E	$6A25	    			CLRF	lstr5_LCDMatricial+3, 0
$0470	$0E46	    			MOVLW	70
$0472	$6E26	    			MOVWF	lstr6_LCDMatricial+0, 0
$0474	$0E65	    			MOVLW	101
$0476	$6E27	    			MOVWF	lstr6_LCDMatricial+1, 0
$0478	$0E63	    			MOVLW	99
$047A	$6E28	    			MOVWF	lstr6_LCDMatricial+2, 0
$047C	$0E68	    			MOVLW	104
$047E	$6E29	    			MOVWF	lstr6_LCDMatricial+3, 0
$0480	$0E61	    			MOVLW	97
$0482	$6E2A	    			MOVWF	lstr6_LCDMatricial+4, 0
$0484	$0E64	    			MOVLW	100
$0486	$6E2B	    			MOVWF	lstr6_LCDMatricial+5, 0
$0488	$0E6F	    			MOVLW	111
$048A	$6E2C	    			MOVWF	lstr6_LCDMatricial+6, 0
$048C	$6A2D	    			CLRF	lstr6_LCDMatricial+7, 0
$048E	$0E41	    			MOVLW	65
$0490	$6E2E	    			MOVWF	lstr7_LCDMatricial+0, 0
$0492	$0E62	    			MOVLW	98
$0494	$6E2F	    			MOVWF	lstr7_LCDMatricial+1, 0
$0496	$0E65	    			MOVLW	101
$0498	$6E30	    			MOVWF	lstr7_LCDMatricial+2, 0
$049A	$0E72	    			MOVLW	114
$049C	$6E31	    			MOVWF	lstr7_LCDMatricial+3, 0
$049E	$0E74	    			MOVLW	116
$04A0	$6E32	    			MOVWF	lstr7_LCDMatricial+4, 0
$04A2	$0E6F	    			MOVLW	111
$04A4	$6E33	    			MOVWF	lstr7_LCDMatricial+5, 0
$04A6	$6A34	    			CLRF	lstr7_LCDMatricial+6, 0
$04A8	$0E45	    			MOVLW	69
$04AA	$6E35	    			MOVWF	lstr8_LCDMatricial+0, 0
$04AC	$0E72	    			MOVLW	114
$04AE	$6E36	    			MOVWF	lstr8_LCDMatricial+1, 0
$04B0	$0E72	    			MOVLW	114
$04B2	$6E37	    			MOVWF	lstr8_LCDMatricial+2, 0
$04B4	$0E61	    			MOVLW	97
$04B6	$6E38	    			MOVWF	lstr8_LCDMatricial+3, 0
$04B8	$0E64	    			MOVLW	100
$04BA	$6E39	    			MOVWF	lstr8_LCDMatricial+4, 0
$04BC	$0E6F	    			MOVLW	111
$04BE	$6E3A	    			MOVWF	lstr8_LCDMatricial+5, 0
$04C0	$6A3B	    			CLRF	lstr8_LCDMatricial+6, 0
;LCDMatricial.c,16 :: 			void main () {
;LCDMatricial.c,18 :: 			int segredo = 6969;
$04C2	$0E39	    			MOVLW	57
$04C4	$6E3D	    			MOVWF	main_segredo_L0, 0
$04C6	$0E1B	    			MOVLW	27
$04C8	$6E3E	    			MOVWF	main_segredo_L0+1, 0
;LCDMatricial.c,19 :: 			int senha = 0;
$04CA	$6A3F	    			CLRF	main_senha_L0, 0
$04CC	$6A40	    			CLRF	main_senha_L0+1, 0
;LCDMatricial.c,20 :: 			int multi = 1000;
$04CE	$0EE8	    			MOVLW	232
$04D0	$6E41	    			MOVWF	main_multi_L0, 0
$04D2	$0E03	    			MOVLW	3
$04D4	$6E42	    			MOVWF	main_multi_L0+1, 0
;LCDMatricial.c,21 :: 			int tent = 0;
$04D6	$6A43	    			CLRF	main_tent_L0, 0
$04D8	$6A44	    			CLRF	main_tent_L0+1, 0
;LCDMatricial.c,22 :: 			ADCON1 = 0x06;
$04DA	$0E06	    			MOVLW	6
$04DC	$6EC1	    			MOVWF	ADCON1, 0
;LCDMatricial.c,23 :: 			trisd = 255;
$04DE	$0EFF	    			MOVLW	255
$04E0	$6E95	    			MOVWF	TRISD, 0
;LCDMatricial.c,24 :: 			trisa = 0;
$04E2	$6A92	    			CLRF	TRISA, 0
;LCDMatricial.c,25 :: 			init_lcd(void);
$04E4	$EC29	F001			CALL	_init_lcd
;LCDMatricial.c,26 :: 			lcd(" ");
$04E8	$0E1A	    			MOVLW	lstr2_LCDMatricial
$04EA	$6E45	    			MOVWF	FARG_lcd+0, 0
$04EC	$0E00	    			MOVLW	@lstr2_LCDMatricial
$04EE	$6E46	    			MOVWF	FARG_lcd+1, 0
$04F0	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,27 :: 			portb = 255;
$04F4	$0EFF	    			MOVLW	255
$04F6	$6E81	    			MOVWF	PORTB, 0
;LCDMatricial.c,28 :: 			portd = 255;
$04F8	$0EFF	    			MOVLW	255
$04FA	$6E83	    			MOVWF	PORTD, 0
;LCDMatricial.c,29 :: 			trisd = 255;
$04FC	$0EFF	    			MOVLW	255
$04FE	$6E95	    			MOVWF	TRISD, 0
;LCDMatricial.c,30 :: 			trisb = 0;
$0500	$6A93	    			CLRF	TRISB, 0
;LCDMatricial.c,32 :: 			do {
$0502	$	L_main_0:
;LCDMatricial.c,34 :: 			portb.rb0 = 0;
$0502	$9081	    			BCF	PORTB, 0, 0
;LCDMatricial.c,35 :: 			var2 = portd;
$0504	$CF83	F03C			MOVFF	PORTD, main_var2_L0
;LCDMatricial.c,36 :: 			if (var2.rb0 == 0) {
$0508	$0E01	    			MOVLW	1
$050A	$143C	    			ANDWF	main_var2_L0, 0, 0
$050C	$6E02	    			MOVWF	STACK_2, 0
$050E	$5002	    			MOVF	STACK_2, 0, 0
$0510	$0A00	    			XORLW	0
$0512	$E107	    			BNZ	L_main_2
;LCDMatricial.c,37 :: 			lcd("<--");
$0514	$0E1C	    			MOVLW	lstr3_LCDMatricial
$0516	$6E45	    			MOVWF	FARG_lcd+0, 0
$0518	$0E00	    			MOVLW	@lstr3_LCDMatricial
$051A	$6E46	    			MOVWF	FARG_lcd+1, 0
$051C	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,38 :: 			}  else if(var2.rb1 == 0) {
$0520	$D068	    			BRA	L_main_3
$0522	$	L_main_2:
$0522	$6A02	    			CLRF	STACK_2, 0
$0524	$B23C	    			BTFSC	main_var2_L0, 1, 0
$0526	$2A02	    			INCF	STACK_2, 1, 0
$0528	$5002	    			MOVF	STACK_2, 0, 0
$052A	$0A00	    			XORLW	0
$052C	$E11F	    			BNZ	L_main_4
;LCDMatricial.c,39 :: 			senha += 7 * multi;
$052E	$C041	F000			MOVFF	main_multi_L0, STACK_0
$0532	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$0536	$0E07	    			MOVLW	7
$0538	$6E04	    			MOVWF	STACK_4, 0
$053A	$0E00	    			MOVLW	0
$053C	$6E05	    			MOVWF	STACK_4+1, 0
$053E	$EC8B	F001			CALL	_mul_16x16_s
$0542	$5000	    			MOVF	STACK_0, 0, 0
$0544	$263F	    			ADDWF	main_senha_L0, 1, 0
$0546	$5001	    			MOVF	STACK_0+1, 0, 0
$0548	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,40 :: 			tent++;
$054A	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$054C	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,41 :: 			multi /= 10;
$054E	$0E0A	    			MOVLW	10
$0550	$6E04	    			MOVWF	STACK_4, 0
$0552	$0E00	    			MOVLW	0
$0554	$6E05	    			MOVWF	STACK_4+1, 0
$0556	$C041	F000			MOVFF	main_multi_L0, STACK_0
$055A	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$055E	$ECBF	F001			CALL	_div_16x16_s
$0562	$C000	F041			MOVFF	STACK_0, main_multi_L0
$0566	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,42 :: 			} else if(var2.rb2 == 0) {
$056A	$D043	    			BRA	L_main_5
$056C	$	L_main_4:
$056C	$0100	    			MOVLB	0
$056E	$6A02	    			CLRF	STACK_2, 0
$0570	$B43C	    			BTFSC	main_var2_L0, 2, 0
$0572	$2A02	    			INCF	STACK_2, 1, 0
$0574	$5002	    			MOVF	STACK_2, 0, 0
$0576	$0A00	    			XORLW	0
$0578	$E122	    			BNZ	L_main_6
;LCDMatricial.c,43 :: 			senha += 4 * multi;
$057A	$0E02	    			MOVLW	2
$057C	$6E04	    			MOVWF	STACK_4, 0
$057E	$C041	F000			MOVFF	main_multi_L0, STACK_0
$0582	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$0586	$5004	    			MOVF	STACK_4, 0, 0
$0588	$	L_main_28:
$0588	$E005	    			BZ	L_main_29
$058A	$3600	    			RLCF	STACK_0, 1, 0
$058C	$9000	    			BCF	STACK_0, 0, 0
$058E	$3601	    			RLCF	STACK_0+1, 1, 0
$0590	$0FFF	    			ADDLW	255
$0592	$D7FA	    			BRA	L_main_28
$0594	$	L_main_29:
$0594	$5000	    			MOVF	STACK_0, 0, 0
$0596	$263F	    			ADDWF	main_senha_L0, 1, 0
$0598	$5001	    			MOVF	STACK_0+1, 0, 0
$059A	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,44 :: 			tent++;
$059C	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$059E	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,45 :: 			multi /= 10;
$05A0	$0E0A	    			MOVLW	10
$05A2	$6E04	    			MOVWF	STACK_4, 0
$05A4	$0E00	    			MOVLW	0
$05A6	$6E05	    			MOVWF	STACK_4+1, 0
$05A8	$C041	F000			MOVFF	main_multi_L0, STACK_0
$05AC	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$05B0	$ECBF	F001			CALL	_div_16x16_s
$05B4	$C000	F041			MOVFF	STACK_0, main_multi_L0
$05B8	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,46 :: 			} else if(var2.rb3 == 0) {
$05BC	$D01A	    			BRA	L_main_7
$05BE	$	L_main_6:
$05BE	$6A02	    			CLRF	STACK_2, 0
$05C0	$B63C	    			BTFSC	main_var2_L0, 3, 0
$05C2	$2A02	    			INCF	STACK_2, 1, 0
$05C4	$5002	    			MOVF	STACK_2, 0, 0
$05C6	$0A00	    			XORLW	0
$05C8	$E114	    			BNZ	L_main_8
;LCDMatricial.c,47 :: 			senha += 1 * multi;
$05CA	$5041	    			MOVF	main_multi_L0, 0, 0
$05CC	$263F	    			ADDWF	main_senha_L0, 1, 0
$05CE	$5042	    			MOVF	main_multi_L0+1, 0, 0
$05D0	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,48 :: 			tent++;
$05D2	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$05D4	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,49 :: 			multi /= 10;
$05D6	$0E0A	    			MOVLW	10
$05D8	$6E04	    			MOVWF	STACK_4, 0
$05DA	$0E00	    			MOVLW	0
$05DC	$6E05	    			MOVWF	STACK_4+1, 0
$05DE	$C041	F000			MOVFF	main_multi_L0, STACK_0
$05E2	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$05E6	$ECBF	F001			CALL	_div_16x16_s
$05EA	$C000	F041			MOVFF	STACK_0, main_multi_L0
$05EE	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,50 :: 			}
$05F2	$	L_main_8:
$05F2	$	L_main_7:
$05F2	$	L_main_5:
$05F2	$	L_main_3:
;LCDMatricial.c,51 :: 			portb.rb0 = 1;
$05F2	$0100	    			MOVLB	0
$05F4	$8081	    			BSF	PORTB, 0, 0
;LCDMatricial.c,54 :: 			portb.rb1 = 0;
$05F6	$9281	    			BCF	PORTB, 1, 0
;LCDMatricial.c,55 :: 			var2 = portd;
$05F8	$CF83	F03C			MOVFF	PORTD, main_var2_L0
;LCDMatricial.c,57 :: 			if (var2.rb0 == 0) {
$05FC	$0E01	    			MOVLW	1
$05FE	$143C	    			ANDWF	main_var2_L0, 0, 0
$0600	$6E02	    			MOVWF	STACK_2, 0
$0602	$5002	    			MOVF	STACK_2, 0, 0
$0604	$0A00	    			XORLW	0
$0606	$E107	    			BNZ	L_main_9
;LCDMatricial.c,58 :: 			lcd("0");
$0608	$0E20	    			MOVLW	lstr4_LCDMatricial
$060A	$6E45	    			MOVWF	FARG_lcd+0, 0
$060C	$0E00	    			MOVLW	@lstr4_LCDMatricial
$060E	$6E46	    			MOVWF	FARG_lcd+1, 0
$0610	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,59 :: 			} else if(var2.rb1 == 0) {
$0614	$D075	    			BRA	L_main_10
$0616	$	L_main_9:
$0616	$6A02	    			CLRF	STACK_2, 0
$0618	$B23C	    			BTFSC	main_var2_L0, 1, 0
$061A	$2A02	    			INCF	STACK_2, 1, 0
$061C	$5002	    			MOVF	STACK_2, 0, 0
$061E	$0A00	    			XORLW	0
$0620	$E122	    			BNZ	L_main_11
;LCDMatricial.c,60 :: 			senha += 8 * multi;
$0622	$0E03	    			MOVLW	3
$0624	$6E04	    			MOVWF	STACK_4, 0
$0626	$C041	F000			MOVFF	main_multi_L0, STACK_0
$062A	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$062E	$5004	    			MOVF	STACK_4, 0, 0
$0630	$	L_main_30:
$0630	$E005	    			BZ	L_main_31
$0632	$3600	    			RLCF	STACK_0, 1, 0
$0634	$9000	    			BCF	STACK_0, 0, 0
$0636	$3601	    			RLCF	STACK_0+1, 1, 0
$0638	$0FFF	    			ADDLW	255
$063A	$D7FA	    			BRA	L_main_30
$063C	$	L_main_31:
$063C	$5000	    			MOVF	STACK_0, 0, 0
$063E	$263F	    			ADDWF	main_senha_L0, 1, 0
$0640	$5001	    			MOVF	STACK_0+1, 0, 0
$0642	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,61 :: 			tent++;
$0644	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$0646	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,62 :: 			multi /= 10;
$0648	$0E0A	    			MOVLW	10
$064A	$6E04	    			MOVWF	STACK_4, 0
$064C	$0E00	    			MOVLW	0
$064E	$6E05	    			MOVWF	STACK_4+1, 0
$0650	$C041	F000			MOVFF	main_multi_L0, STACK_0
$0654	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$0658	$ECBF	F001			CALL	_div_16x16_s
$065C	$C000	F041			MOVFF	STACK_0, main_multi_L0
$0660	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,63 :: 			} else if(var2.rb2 == 0) {
$0664	$D04D	    			BRA	L_main_12
$0666	$	L_main_11:
$0666	$0100	    			MOVLB	0
$0668	$6A02	    			CLRF	STACK_2, 0
$066A	$B43C	    			BTFSC	main_var2_L0, 2, 0
$066C	$2A02	    			INCF	STACK_2, 1, 0
$066E	$5002	    			MOVF	STACK_2, 0, 0
$0670	$0A00	    			XORLW	0
$0672	$E11F	    			BNZ	L_main_13
;LCDMatricial.c,64 :: 			senha += 5 * multi;
$0674	$C041	F000			MOVFF	main_multi_L0, STACK_0
$0678	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$067C	$0E05	    			MOVLW	5
$067E	$6E04	    			MOVWF	STACK_4, 0
$0680	$0E00	    			MOVLW	0
$0682	$6E05	    			MOVWF	STACK_4+1, 0
$0684	$EC8B	F001			CALL	_mul_16x16_s
$0688	$5000	    			MOVF	STACK_0, 0, 0
$068A	$263F	    			ADDWF	main_senha_L0, 1, 0
$068C	$5001	    			MOVF	STACK_0+1, 0, 0
$068E	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,65 :: 			tent++;
$0690	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$0692	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,66 :: 			multi /= 10;
$0694	$0E0A	    			MOVLW	10
$0696	$6E04	    			MOVWF	STACK_4, 0
$0698	$0E00	    			MOVLW	0
$069A	$6E05	    			MOVWF	STACK_4+1, 0
$069C	$C041	F000			MOVFF	main_multi_L0, STACK_0
$06A0	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$06A4	$ECBF	F001			CALL	_div_16x16_s
$06A8	$C000	F041			MOVFF	STACK_0, main_multi_L0
$06AC	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,67 :: 			} else if(var2.rb3 == 0) {
$06B0	$D027	    			BRA	L_main_14
$06B2	$	L_main_13:
$06B2	$6A02	    			CLRF	STACK_2, 0
$06B4	$B63C	    			BTFSC	main_var2_L0, 3, 0
$06B6	$2A02	    			INCF	STACK_2, 1, 0
$06B8	$5002	    			MOVF	STACK_2, 0, 0
$06BA	$0A00	    			XORLW	0
$06BC	$E121	    			BNZ	L_main_15
;LCDMatricial.c,68 :: 			senha += 2 * multi;
$06BE	$0E01	    			MOVLW	1
$06C0	$6E04	    			MOVWF	STACK_4, 0
$06C2	$C041	F000			MOVFF	main_multi_L0, STACK_0
$06C6	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$06CA	$5004	    			MOVF	STACK_4, 0, 0
$06CC	$	L_main_32:
$06CC	$E005	    			BZ	L_main_33
$06CE	$3600	    			RLCF	STACK_0, 1, 0
$06D0	$9000	    			BCF	STACK_0, 0, 0
$06D2	$3601	    			RLCF	STACK_0+1, 1, 0
$06D4	$0FFF	    			ADDLW	255
$06D6	$D7FA	    			BRA	L_main_32
$06D8	$	L_main_33:
$06D8	$5000	    			MOVF	STACK_0, 0, 0
$06DA	$263F	    			ADDWF	main_senha_L0, 1, 0
$06DC	$5001	    			MOVF	STACK_0+1, 0, 0
$06DE	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,69 :: 			tent++;
$06E0	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$06E2	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,70 :: 			multi /= 10;
$06E4	$0E0A	    			MOVLW	10
$06E6	$6E04	    			MOVWF	STACK_4, 0
$06E8	$0E00	    			MOVLW	0
$06EA	$6E05	    			MOVWF	STACK_4+1, 0
$06EC	$C041	F000			MOVFF	main_multi_L0, STACK_0
$06F0	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$06F4	$ECBF	F001			CALL	_div_16x16_s
$06F8	$C000	F041			MOVFF	STACK_0, main_multi_L0
$06FC	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,71 :: 			}
$0700	$	L_main_15:
$0700	$	L_main_14:
$0700	$	L_main_12:
$0700	$	L_main_10:
;LCDMatricial.c,72 :: 			portb.rb1 = 1;
$0700	$0100	    			MOVLB	0
$0702	$8281	    			BSF	PORTB, 1, 0
;LCDMatricial.c,76 :: 			portb.rb2 = 0;
$0704	$9481	    			BCF	PORTB, 2, 0
;LCDMatricial.c,77 :: 			var2 = portd;
$0706	$CF83	F03C			MOVFF	PORTD, main_var2_L0
;LCDMatricial.c,79 :: 			if (var2.rb0 == 0){
$070A	$0E01	    			MOVLW	1
$070C	$143C	    			ANDWF	main_var2_L0, 0, 0
$070E	$6E02	    			MOVWF	STACK_2, 0
$0710	$5002	    			MOVF	STACK_2, 0, 0
$0712	$0A00	    			XORLW	0
$0714	$E107	    			BNZ	L_main_16
;LCDMatricial.c,80 :: 			lcd("-->");
$0716	$0E22	    			MOVLW	lstr5_LCDMatricial
$0718	$6E45	    			MOVWF	FARG_lcd+0, 0
$071A	$0E00	    			MOVLW	@lstr5_LCDMatricial
$071C	$6E46	    			MOVWF	FARG_lcd+1, 0
$071E	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,81 :: 			} else if(var2.rb1 == 0) {
$0722	$D06F	    			BRA	L_main_17
$0724	$	L_main_16:
$0724	$6A02	    			CLRF	STACK_2, 0
$0726	$B23C	    			BTFSC	main_var2_L0, 1, 0
$0728	$2A02	    			INCF	STACK_2, 1, 0
$072A	$5002	    			MOVF	STACK_2, 0, 0
$072C	$0A00	    			XORLW	0
$072E	$E11F	    			BNZ	L_main_18
;LCDMatricial.c,82 :: 			senha += 9 * multi;
$0730	$C041	F000			MOVFF	main_multi_L0, STACK_0
$0734	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$0738	$0E09	    			MOVLW	9
$073A	$6E04	    			MOVWF	STACK_4, 0
$073C	$0E00	    			MOVLW	0
$073E	$6E05	    			MOVWF	STACK_4+1, 0
$0740	$EC8B	F001			CALL	_mul_16x16_s
$0744	$5000	    			MOVF	STACK_0, 0, 0
$0746	$263F	    			ADDWF	main_senha_L0, 1, 0
$0748	$5001	    			MOVF	STACK_0+1, 0, 0
$074A	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,83 :: 			tent++;
$074C	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$074E	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,84 :: 			multi /= 10;
$0750	$0E0A	    			MOVLW	10
$0752	$6E04	    			MOVWF	STACK_4, 0
$0754	$0E00	    			MOVLW	0
$0756	$6E05	    			MOVWF	STACK_4+1, 0
$0758	$C041	F000			MOVFF	main_multi_L0, STACK_0
$075C	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$0760	$ECBF	F001			CALL	_div_16x16_s
$0764	$C000	F041			MOVFF	STACK_0, main_multi_L0
$0768	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,85 :: 			} else if(var2.rb2 == 0) {
$076C	$D04A	    			BRA	L_main_19
$076E	$	L_main_18:
$076E	$0100	    			MOVLB	0
$0770	$6A02	    			CLRF	STACK_2, 0
$0772	$B43C	    			BTFSC	main_var2_L0, 2, 0
$0774	$2A02	    			INCF	STACK_2, 1, 0
$0776	$5002	    			MOVF	STACK_2, 0, 0
$0778	$0A00	    			XORLW	0
$077A	$E11F	    			BNZ	L_main_20
;LCDMatricial.c,86 :: 			senha += 6 * multi;
$077C	$C041	F000			MOVFF	main_multi_L0, STACK_0
$0780	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$0784	$0E06	    			MOVLW	6
$0786	$6E04	    			MOVWF	STACK_4, 0
$0788	$0E00	    			MOVLW	0
$078A	$6E05	    			MOVWF	STACK_4+1, 0
$078C	$EC8B	F001			CALL	_mul_16x16_s
$0790	$5000	    			MOVF	STACK_0, 0, 0
$0792	$263F	    			ADDWF	main_senha_L0, 1, 0
$0794	$5001	    			MOVF	STACK_0+1, 0, 0
$0796	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,87 :: 			tent++;
$0798	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$079A	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,88 :: 			multi /= 10;
$079C	$0E0A	    			MOVLW	10
$079E	$6E04	    			MOVWF	STACK_4, 0
$07A0	$0E00	    			MOVLW	0
$07A2	$6E05	    			MOVWF	STACK_4+1, 0
$07A4	$C041	F000			MOVFF	main_multi_L0, STACK_0
$07A8	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$07AC	$ECBF	F001			CALL	_div_16x16_s
$07B0	$C000	F041			MOVFF	STACK_0, main_multi_L0
$07B4	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,89 :: 			} else if(var2.rb3 == 0) {
$07B8	$D024	    			BRA	L_main_21
$07BA	$	L_main_20:
$07BA	$6A02	    			CLRF	STACK_2, 0
$07BC	$B63C	    			BTFSC	main_var2_L0, 3, 0
$07BE	$2A02	    			INCF	STACK_2, 1, 0
$07C0	$5002	    			MOVF	STACK_2, 0, 0
$07C2	$0A00	    			XORLW	0
$07C4	$E11E	    			BNZ	L_main_22
;LCDMatricial.c,90 :: 			senha += 3 * multi;
$07C6	$C041	F000			MOVFF	main_multi_L0, STACK_0
$07CA	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$07CE	$0E03	    			MOVLW	3
$07D0	$6E04	    			MOVWF	STACK_4, 0
$07D2	$0E00	    			MOVLW	0
$07D4	$6E05	    			MOVWF	STACK_4+1, 0
$07D6	$EC8B	F001			CALL	_mul_16x16_s
$07DA	$5000	    			MOVF	STACK_0, 0, 0
$07DC	$263F	    			ADDWF	main_senha_L0, 1, 0
$07DE	$5001	    			MOVF	STACK_0+1, 0, 0
$07E0	$2240	    			ADDWFC	main_senha_L0+1, 1, 0
;LCDMatricial.c,91 :: 			tent++;
$07E2	$4A43	    			INFSNZ	main_tent_L0, 1, 0
$07E4	$2A44	    			INCF	main_tent_L0+1, 1, 0
;LCDMatricial.c,92 :: 			multi /= 10;
$07E6	$0E0A	    			MOVLW	10
$07E8	$6E04	    			MOVWF	STACK_4, 0
$07EA	$0E00	    			MOVLW	0
$07EC	$6E05	    			MOVWF	STACK_4+1, 0
$07EE	$C041	F000			MOVFF	main_multi_L0, STACK_0
$07F2	$C042	F001			MOVFF	main_multi_L0+1, STACK_0+1
$07F6	$ECBF	F001			CALL	_div_16x16_s
$07FA	$C000	F041			MOVFF	STACK_0, main_multi_L0
$07FE	$C001	F042			MOVFF	STACK_0+1, main_multi_L0+1
;LCDMatricial.c,93 :: 			}
$0802	$	L_main_22:
$0802	$	L_main_21:
$0802	$	L_main_19:
$0802	$	L_main_17:
;LCDMatricial.c,94 :: 			portb.rb2 = 1;
$0802	$0100	    			MOVLB	0
$0804	$8481	    			BSF	PORTB, 2, 0
;LCDMatricial.c,95 :: 			if (tent < 4) {
$0806	$0E80	    			MOVLW	128
$0808	$1844	    			XORWF	main_tent_L0+1, 0, 0
$080A	$6E00	    			MOVWF	STACK_0, 0
$080C	$0E80	    			MOVLW	128
$080E	$5C00	    			SUBWF	STACK_0, 0, 0
$0810	$E102	    			BNZ	L_main_34
$0812	$0E04	    			MOVLW	4
$0814	$5C43	    			SUBWF	main_tent_L0, 0, 0
$0816	$	L_main_34:
$0816	$E207	    			BC	L_main_23
;LCDMatricial.c,96 :: 			lcd("Fechado");
$0818	$0E26	    			MOVLW	lstr6_LCDMatricial
$081A	$6E45	    			MOVWF	FARG_lcd+0, 0
$081C	$0E00	    			MOVLW	@lstr6_LCDMatricial
$081E	$6E46	    			MOVWF	FARG_lcd+1, 0
$0820	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,97 :: 			} else if (tent == 4) {
$0824	$D041	    			BRA	L_main_24
$0826	$	L_main_23:
$0826	$0E00	    			MOVLW	0
$0828	$1844	    			XORWF	main_tent_L0+1, 0, 0
$082A	$E102	    			BNZ	L_main_35
$082C	$0E04	    			MOVLW	4
$082E	$1843	    			XORWF	main_tent_L0, 0, 0
$0830	$	L_main_35:
$0830	$E13B	    			BNZ	L_main_25
;LCDMatricial.c,98 :: 			if (senha == segredo) {
$0832	$5040	    			MOVF	main_senha_L0+1, 0, 0
$0834	$183E	    			XORWF	main_segredo_L0+1, 0, 0
$0836	$E102	    			BNZ	L_main_36
$0838	$503D	    			MOVF	main_segredo_L0, 0, 0
$083A	$183F	    			XORWF	main_senha_L0, 0, 0
$083C	$	L_main_36:
$083C	$E107	    			BNZ	L_main_26
;LCDMatricial.c,99 :: 			lcd("Aberto");
$083E	$0E2E	    			MOVLW	lstr7_LCDMatricial
$0840	$6E45	    			MOVWF	FARG_lcd+0, 0
$0842	$0E00	    			MOVLW	@lstr7_LCDMatricial
$0844	$6E46	    			MOVWF	FARG_lcd+1, 0
$0846	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,100 :: 			} else {
$084A	$D02E	    			BRA	L_main_27
$084C	$	L_main_26:
;LCDMatricial.c,101 :: 			lcd("Errado");
$084C	$0E35	    			MOVLW	lstr8_LCDMatricial
$084E	$6E45	    			MOVWF	FARG_lcd+0, 0
$0850	$0E00	    			MOVLW	@lstr8_LCDMatricial
$0852	$6E46	    			MOVWF	FARG_lcd+1, 0
$0854	$EC5B	F001			CALL	_lcd
;LCDMatricial.c,102 :: 			delay_ms(1000);
$0858	$0E0B	    			MOVLW	11
$085A	$6E0C	    			MOVWF	STACK_12, 0
$085C	$0EFF	    			MOVLW	255
$085E	$6E0B	    			MOVWF	STACK_11, 0
$0860	$0EFF	    			MOVLW	255
$0862	$6E0A	    			MOVWF	STACK_10, 0
$0864	$2E0C	    			DECFSZ	STACK_12, F, 0
$0866	$D001	    			BRA	$+2
$0868	$D007	    			BRA	$+8
$086A	$2E0B	    			DECFSZ	STACK_11, F, 0
$086C	$D001	    			BRA	$+2
$086E	$D003	    			BRA	$+4
$0870	$2E0A	    			DECFSZ	STACK_10, F, 0
$0872	$D7FE	    			BRA	$-1
$0874	$D7FA	    			BRA	$-5
$0876	$D7F6	    			BRA	$-9
$0878	$0E33	    			MOVLW	51
$087A	$6E0B	    			MOVWF	STACK_11, 0
$087C	$0EFF	    			MOVLW	255
$087E	$6E0A	    			MOVWF	STACK_10, 0
$0880	$2E0B	    			DECFSZ	STACK_11, F, 0
$0882	$D001	    			BRA	$+2
$0884	$D003	    			BRA	$+4
$0886	$2E0A	    			DECFSZ	STACK_10, F, 0
$0888	$D7FE	    			BRA	$-1
$088A	$D7FA	    			BRA	$-5
$088C	$0E88	    			MOVLW	136
$088E	$6E0A	    			MOVWF	STACK_10, 0
$0890	$2E0A	    			DECFSZ	STACK_10, F, 0
$0892	$D7FE	    			BRA	$-1
$0894	$0000	    			NOP
$0896	$0000	    			NOP
;LCDMatricial.c,103 :: 			tent = 0;
$0898	$6A43	    			CLRF	main_tent_L0, 0
$089A	$6A44	    			CLRF	main_tent_L0+1, 0
;LCDMatricial.c,104 :: 			senha = 0;
$089C	$6A3F	    			CLRF	main_senha_L0, 0
$089E	$6A40	    			CLRF	main_senha_L0+1, 0
;LCDMatricial.c,105 :: 			multi = 1000;
$08A0	$0EE8	    			MOVLW	232
$08A2	$6E41	    			MOVWF	main_multi_L0, 0
$08A4	$0E03	    			MOVLW	3
$08A6	$6E42	    			MOVWF	main_multi_L0+1, 0
;LCDMatricial.c,106 :: 			}
$08A8	$	L_main_27:
;LCDMatricial.c,107 :: 			}
$08A8	$	L_main_25:
$08A8	$	L_main_24:
;LCDMatricial.c,108 :: 			delay_ms(100);
$08A8	$0E02	    			MOVLW	2
$08AA	$6E0C	    			MOVWF	STACK_12, 0
$08AC	$0EFF	    			MOVLW	255
$08AE	$6E0B	    			MOVWF	STACK_11, 0
$08B0	$0EFF	    			MOVLW	255
$08B2	$6E0A	    			MOVWF	STACK_10, 0
$08B4	$2E0C	    			DECFSZ	STACK_12, F, 0
$08B6	$D001	    			BRA	$+2
$08B8	$D007	    			BRA	$+8
$08BA	$2E0B	    			DECFSZ	STACK_11, F, 0
$08BC	$D001	    			BRA	$+2
$08BE	$D003	    			BRA	$+4
$08C0	$2E0A	    			DECFSZ	STACK_10, F, 0
$08C2	$D7FE	    			BRA	$-1
$08C4	$D7FA	    			BRA	$-5
$08C6	$D7F6	    			BRA	$-9
$08C8	$0E06	    			MOVLW	6
$08CA	$6E0B	    			MOVWF	STACK_11, 0
$08CC	$0EFF	    			MOVLW	255
$08CE	$6E0A	    			MOVWF	STACK_10, 0
$08D0	$2E0B	    			DECFSZ	STACK_11, F, 0
$08D2	$D001	    			BRA	$+2
$08D4	$D003	    			BRA	$+4
$08D6	$2E0A	    			DECFSZ	STACK_10, F, 0
$08D8	$D7FE	    			BRA	$-1
$08DA	$D7FA	    			BRA	$-5
$08DC	$0E0A	    			MOVLW	10
$08DE	$6E0A	    			MOVWF	STACK_10, 0
$08E0	$2E0A	    			DECFSZ	STACK_10, F, 0
$08E2	$D7FE	    			BRA	$-1
$08E4	$0000	    			NOP
;LCDMatricial.c,109 :: 			} while(1);
$08E6	$D60D	    			BRA	L_main_0
;LCDMatricial.c,110 :: 			}
$08E8	$D7FF	    			BRA	$
